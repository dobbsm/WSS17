(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    388269,       7442]
NotebookOptionsPosition[    370983,       7052]
NotebookOutlinePosition[    377321,       7193]
CellTagsIndexPosition[    377278,       7190]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Wolfram Summer School HW Week 1:
Fourier Series\
\>", "Title",
 CellChangeTimes->{{3.700774153171832*^9, 3.700774159196458*^9}, {
  3.705104157104324*^9, 3.7051041574063416`*^9}, {3.70568519155404*^9, 
  3.705685209964157*^9}, {3.7070808497601023`*^9, 3.707080860205456*^9}, {
  3.707089201035062*^9, 3.707089201488833*^9}, {3.707166547407105*^9, 
  3.707166549113743*^9}},ExpressionUUID->"d45c1ada-1e6d-4124-9d73-\
733ea5dc6b8f"],

Cell["\<\
The Fourier Series is a representation of a function as an infinite sum of \
sinusoids.\
\>", "Abstract",
 CellChangeTimes->{{3.700774172671139*^9, 3.700774220850109*^9}, {
  3.700778895632181*^9, 3.700778896308676*^9}, {3.7051041615775795`*^9, 
  3.705104170817108*^9}, {3.7070818883782673`*^9, 3.707081935998212*^9}, {
  3.707082011487956*^9, 3.707082037293437*^9}, {3.707090519888072*^9, 
  3.707090520438182*^9}},ExpressionUUID->"aed93f91-c5d2-4282-9128-\
bc38b699b910"],

Cell[CellGroupData[{

Cell["The Fourier Series", "Section",
 CellChangeTimes->{{3.700774708350976*^9, 3.700774714085747*^9}, {
  3.7051042493566003`*^9, 3.7051042513157125`*^9}, {3.705686166481989*^9, 
  3.7056861672865133`*^9}, {3.7070808832322493`*^9, 3.707080920357161*^9}, {
  3.707084467035679*^9, 3.707084467099204*^9}, {3.707086596063846*^9, 
  3.707086597292906*^9}},ExpressionUUID->"fa040ec3-1ff0-437d-b576-\
fbcb15193ddc"],

Cell[CellGroupData[{

Cell["History", "Subsection",
 CellChangeTimes->{{3.7070809670284557`*^9, 3.707080970804514*^9}, {
  3.707084459539116*^9, 3.707084460602927*^9}, {3.7070853130222063`*^9, 
  3.7070853173661327`*^9}, {3.70708827937325*^9, 3.7070882817651253`*^9}, {
  3.70708851596471*^9, 
  3.70708851716987*^9}},ExpressionUUID->"f12f8177-2083-4599-b3a9-\
0e793ac71dc1"],

Cell[TextData[{
 "Jean-Baptiste Joseph Fourier introduced the Fourier Series as a way of \
solving the heat equation in a metal plate. In turn, he concluded that any \
arbitrary continuous function can be represented by a trigonometric series \
based on the set of ",
 StyleBox["Sin(n\[CenterDot]x)",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Cos(n\[CenterDot]x)",
  FontSlant->"Italic"],
 " functions. In general, the techniques are quite useful when applied to \
differential equations involving eigen-solutions that are sinusoids. "
}], "Text",
 CellChangeTimes->{{3.707090174228292*^9, 3.707090198146344*^9}, {
   3.707090240153655*^9, 3.707090314961042*^9}, {3.707090371536586*^9, 
   3.707090400088482*^9}, {3.707157826287703*^9, 3.7071578321551743`*^9}, 
   3.7071617994256*^9, {3.707244268389544*^9, 
   3.707244285997035*^9}},ExpressionUUID->"27166190-f905-4c80-bff5-\
cd3ea3fb18a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Motivation", "Subsection",
 CellChangeTimes->{{3.7070809670284557`*^9, 3.707080970804514*^9}, {
  3.707084459539116*^9, 3.707084460602927*^9}, {3.7070853130222063`*^9, 
  3.7070853173661327`*^9}, {3.7070890824895277`*^9, 3.7070890878576508`*^9}, {
  3.7070898214234447`*^9, 
  3.707089822583433*^9}},ExpressionUUID->"6b2b6e79-da96-4cbb-b29d-\
35974ae31bb0"],

Cell["\<\
Consider a function that does not have a closed form integral formula (i.e. \
cannot be expressed without using numeric methods):\
\>", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, {
  3.7051042689957237`*^9, 3.7051043842073135`*^9}, {3.705105072313671*^9, 
  3.705105092602831*^9}, {3.705683778330366*^9, 3.705683783009487*^9}, {
  3.70708222407747*^9, 3.70708222680258*^9}, {3.7070822640899267`*^9, 
  3.707082278841877*^9}, {3.7071618370688066`*^9, 3.707161840548317*^9}, {
  3.707162417613497*^9, 
  3.707162457060363*^9}},ExpressionUUID->"7a87bf49-59ac-46cb-bad2-\
2980a9a19cc0"],

Cell[TextData[{
 "Plot said function: Sin(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "3dc7ec4d-2a29-4bd5-ba54-76797cd864d8"],
 ")"
}], "Direction",
 CellChangeTimes->{{3.7070829870015907`*^9, 3.707082991504002*^9}, {
  3.7070838139886913`*^9, 3.7070838573473988`*^9}, {3.707157837857723*^9, 
  3.7071578546969967`*^9}},ExpressionUUID->"fe9c1cb7-fb56-4346-938a-\
56d31e2143e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "^", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707082288964622*^9, 3.707082300497569*^9}, {
  3.707083342164637*^9, 3.707083355235358*^9}, {3.7070833864704*^9, 
  3.70708338672283*^9}, {3.7070835465565243`*^9, 3.707083549890724*^9}, {
  3.707083679343511*^9, 3.707083709839644*^9}, {3.707083778984982*^9, 
  3.7070837815412827`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c7e394f9-89c0-4730-bc63-a3bac771ab72"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rozea0eSMKb08lvwNTq6ezFj3f0pEp4W1peGWNPRx/5fF47NkLDbUJj2yYSO
Ctp/+6cx+BJ32awPPUVH++5f5qxfIOGcQ5ziVzU6UkllU2f4CZhfmjKPOERH
HkcfJexcIeHtM5UH3/bSkVS97S+9VRL2b/aOiN5NR0XKhZ2yDJ6tiCwtjtlK
R5p39P1zGPqK/LqxOAE68prTOLzM0KzYTCCRSkfy7Zcsxhk6TDdMIXl5Gl0R
o9gGMPSRf4NmqVPTyGt0oKyfsX7zlX3304emUWaVHZXG2P/OrMvXjI5ppC9+
6mXM/3n5cW5hVv00um7T2ijEiDd+HXUku2wa3XQpNT/CyOd4qC7fbzyNNKXV
Xgsy8u2XeSePMqYR8a516iudcf6e32hDcdOoUSpFI4rB1w5/f8Su/zqNzoyp
ZRnSSEgTLbI7EjSNdsVQhmNHGPW43Shm5zeNwqR7HOMHGPHmD3S88ppGpvym
U2Y9jP4UnAv56TyNUuNOsqa0M84/c/MGXutpVOf9xdiujgQ9Dsm/isbTaJsX
paagklHPs4f8rHWmkWNFr0kNg8+3L5uxpCtMo676m6uz2Yx+1L2K2qWm0ft6
Yat16SREfXG7x75jGp0X0jreFs+o/7GQaXPOafRrh9dBn88kOAfGJj1enULw
ZMHdjsHv2b3Z1xOnp9CTI5nlCy8Y/efzr5fSMYWGJW4LHrlHgkm5cP331CkU
pPBnmmDwe4iwbEBt9BSqtX2hVn6ChE571VPLn6ZQavVyHC8wzlPAskDPdwpl
xNLMfkuScM84NH3WYgqNkpr9LfOM+yMq6Zao/hRK/pVSqzhGA9Z5JKOjNYWc
bTZPnOmkgX9IV+Tn/VMouspDExUw7ovOne802KaQ6/jczqAXNCi6GukcmDiJ
1Lofe2cz7ivuX+lyORGTaCRY7r4iE+O+4ikc7w+eREYfNQrdyHFoSey/pPxo
EuVsupdrVjkOY9MSJl2mk4gvYF3FM59xWOcZo7iXMomsRPQ41ckx8MmQLBGY
m0C3D+vNVbeNwSIt+uz02AQyDZ4SUCwbgx6rKI+s5glUufVhrm/kGKQei/ij
ljyBemOr00xMx8CA7fNpU6sJ1O797ip/xijs2bKzkukeiQ5GttWpWIyAjCIp
8216DJ274rLgfn4QHmmMV/+8O4hq52we5V/qgj/Hx/QUbBi+5zjhGqfTBUy6
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
BDyFjMoMGZydlnRVdtpjBBzkd2gjBjc/LDyaXhM/AnvSzEXLeScAr6SmcHCP
AvvgxJZw2wm4m7af3olHofj0dt4z6ychcJTTU4wRl+De7k2OwpOgUJl5XEZ0
HKx5v4m+lZiEpj9CGtzy47BYLqPQrDIJfi2+FVrG4yBz4oiFtc0kRIZ5r4v6
MA4B6hYxt9InocZiientFhq0ie1IC8ydhMofXES6JA2kmHtz0ksmgVoj8fqr
Eg3+4GvV822TMOQcbt5tRIMZVfc5L7Yp4Cfltg4y+MX80AfN1yZT0Jdz5dL7
KRpEbT6vl2Y9BUHF2QU6qzSYnhU923BtCmTlksf/cJLw4sf3G1seTIFjn83T
tR0kIPmsN1+jpwAFlhp9ZPAXz3qPz/kpU6CcqeBsZ0iC2SRE9/+agmT1FKWp
cyRMJRVnS1VPwbZU6YATNxl8L9vUnTI/BfMK29YPB5Bwi+fjaB3zNIQ2vS6M
DSbh96jlzAzPNHSOVMxLhjH4L3aAQ2XnNFjJ61WbJZIQ/ix2/bn/psFieNqe
8wcJ5BUHYc+D06CVLOJ55xcJT/fM7vtzYhraJw+MujJ4tZ6ardxnOA25GUbq
/Aye3TlwX51qOQ2mcw6sVrUMni48pit5ZRqWayvi7ZoYPBrJZqrjOA0/Y1h/
ibeRwP641PqGxzTg8OWEj10kGNm8vObvMw2OKjTWkj4Sxndu9KwNmYbAa+bt
x8ZIOHTv6+28yGn4XJjn6kmS4F0veyk5cRr2UZqvO06RUCGbbRaaNQ0GfGxq
22dI2OSrdcr/DyO+mXWPPOf+/391LdyvmAZekMl6t8DoU2WrAzcap8HFcvja
xSUS6IGjEhZd0yAmpSPet0zC0THXrToj07Cil3t76yojf01WPmU6Y373nn+s
ayTUfgmgSK5Ow9G/HWPhDC08LzyziYMO4V7p8nSGttOPGWJbT4cNNnOH5hk6
OfZgG30bHZR8XV4kMvQiy5+/veJ06Dz2JPv/7wNonD+dX7uPDkl1q2f2M/Z7
ldGakadMB87NOh2LjHha+S/HJqvTQVnh/KQzI97dV6c/h+rSocwib8tXRj4O
fx689jelA6tv0OA9Rr5Z23ie3L9Ah2dH34+yMerB7Bx898Z1OqzYCWceZdTr
VNXuGxbOdEjdsLNNnFHPoD0pVjoP6GBkpTWePUpCl5eqofIzOrjrNN1fGSRB
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
Ok3A/cRNVTnKQnynyzrh/CQBUfsiqO7qQZxdNVX2J8mGxT1KkQ5jAqzh7xB0
RJINPZnzJJaXCHDhpmoTS2k2FAzs8/kcIMCVj++2Ga9gg8pv2/M0RAT4S/CW
qY2abIislylVFPDxEf348vXabHi/wKZzTiIfd0+JB69BbOAv7B4bMudjoWuT
tKwRGzQTp60VC/qx6F4fTRFbNmxe7m+6x6kPXxdrn5myZ4P8sVcbD5B9mIt3
Vo46saHD7F1R1NNeLKu+yKzPgw3KSmHfW8d78AbJZx4fA9ngsTrQaos7Dx9u
HMp4kMmG8KtLfJK43/DXcCuvmFw2yJYpfTJ80IkdDcu1o16wYaVeVW/k2k7s
URD5NvAlG9ok6jXUt33FQfc29Lo2sGGPmongt9w2nHvkr5XaM2y4FnazLTe3
ATs8/y4fL8KBdPkfoW9u1GMpjreMmDgHpJTo5mHPT9in8Oz8Tws4YEJ6BXSp
1GJtqWuzJ5Q40PVzeLhx4Wtc8Tax5a4pB1hg8Y/CnXjcoNF8YzKVA1Fekjst
h2vRlRDrcLtsDiRryvmScp/Qpm/twVV5HFCXK75nuqMe3YngXYgq44CVbKCn
XORnZMsfdl/bwAH9fh2nuAUtqCeONLb6xYEgKvODjGknihmLNMCiJOjW8wpG
GzrRLhMp/dUECbxplYu6h76h9ClZrSEpEtI3moS3m3Whk+bKSsEqJGzLqlgj
ps1DE8T2eYXmJCz2/Jog/7gPSQqpWxWHSVDlB9abifajdXUtijV2JDRFF2Vc
tutHR2JOGXScICG4OiUni8tHvme3NfW5k7Dz3MP+23/yUaQt4TzsRYLGqb/7
LPL56NWqxODf/Jn3/WqieocGUJuYuyz3MnP/7q+TVokDaKxfK2PJNSbedhJU
BANI+UldzbobJPQWlQQ1+QlQuK7IfNMUEua77myMPT2IUhXex1tnkBChF+2c
mz2Iyufe/d3xCQkjI3VzjHiDaPSNuplfEQlr5UwyenYLEZU503URk7D0V6hn
5xkhUop44x1SScKj45qPDVOE6LD50dsPP5Dgn7iJrT8uRN5b1iul1pMws74p
umYpw59LJ/Jzm0l4a1dtlLOVRimzr3YV/0vCqNfODp4NjV52Rnyp/EZCQlqn
gdsZGn2ptHb50EsCZ6dO+rabNBp+rDTdJCDh7NZQN6t0GnFCRkI6h0jYf1V/
XWEZjVa7Y7mBMWaeXVFlh2tptO1ASNboNAkly0S0dRh+ttSw2DY7h4IfacMC
iwEaeUqv+iguRsEOP+Vj2aM0uj4ltFvApoDL2e6oO02j5H+LvsvOp2B/nM7k
r1kalb4Muqi4iIIY0y8O4wwfNyaZSqrJUhC3d4XiCib+PWhZ0mYFClory3+e
m6QR4cL/Q0+RgtvFvrQYw8erTF5U7l5LQd6Nk1vKe2mkq37J/KAaBaZq8Rbp
LQwvL9zbY/sHBej5ck5FNY08xmR8j2+hYHOdn7kEw8PBX3jinlspuG834HU+
keH1ktw7Z/UpOHqxuG/FdRqVxJ1fG2hIQdukq8+YO1PfJaOisD0UyNZMLJ/Z
TyPacZFxzAEK2sXYahrqNJIw6myNP0SB4pM1q+M5NFq5Psst3ZoC+/JPH/V6
hEiHe+Zn3lEKJNcUay0tFaKDwzvCSx0pcM6ueaIWJURXC9pyak9S8GdzhxH1
uxDFx6ZCizeT3/OR2deZQVTk713XdYaZd5ey9kTVIBLs4IyMXaagL6vKUGL/
IDKt09kkf4eC0JItkct2CBChwy4veUABr+TekpahAVSe3GJsk0TBTHyyk+39
AaTud8Y+NpuptyD379ZePqIU8kNlqph8+qHPMq360T/XgqQLqymIlReW3xP2
ofPD5omWtRToeLC4sRf6kKBqND+mlYJTh8WHZmN70Vu3jV2LhinIahG3ic/l
oQuNIu7Px5n++Jl6Luo8tAXqJg7+pKCYWzs3LbMbpSz0oG5JcEGlff/a0gdd
KLAoS0tSgQviZTfsW491IpBYG0nt4cJr8tiKrKVf0ITnhGz2AS6Mp7J0LRqb
UE7r60cmFlwofjqRNRrWiJblOBWHOnDBNrw6M260Hs2YJ/cQZ7ggaswz/mz4
HuUnKWwVT+HCuWDyYZRLFnIn6dcpGVwwvrwrcIdJIlrjW2ZqkMuFqvXKDnI5
oejWblvnKyVcqBYzk6rSfYhPDd27Oa+eC5HqebuLGkqxirXLsqRmLqh6ZulE
PynHnZVaafrtXBARt49efroS77/TXHaxnwubNT+srBt/iyXmphqtoLnQnSi6
y+B5Dcauvg0vR7lwXKMwLfvkR+zz2cDu6BQXcvoWqFktrMP/2ycG/98n9h/1
4DBf
       "]]},
     Annotation[#, "Charting`Private`Tag$35337#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-0.9999995520684569, 0.9999999715405162}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.707082302366933*^9, {3.707083355580917*^9, 3.707083387303485*^9}, 
   3.7070835504221992`*^9, 3.707083710363022*^9, 3.70708378211063*^9, 
   3.707084105551262*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"a7e317d1-f250-4be9-81dd-8bf8a3aef12e"]
}, Open  ]],

Cell["We attempt to the take the integral...", "Text",
 CellChangeTimes->{{3.707082312851334*^9, 3.707082320001101*^9}, {
  3.707082711619735*^9, 
  3.707082712107423*^9}},ExpressionUUID->"4e2269b7-5c89-4866-ad40-\
2a96f7bee509"],

Cell["Integrate the function:", "Direction",
 CellChangeTimes->{{3.707082995655683*^9, 3.7070830005357723`*^9}, {
  3.707083864147664*^9, 
  3.7070838648273*^9}},ExpressionUUID->"7b0872c8-8494-4723-84aa-b87f67001b1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "^", "2"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7070823211301203`*^9, 3.7070823268413153`*^9}, {
  3.707083477220566*^9, 3.707083480825285*^9}, {3.707083556715681*^9, 
  3.707083559832206*^9}, {3.7070837172439327`*^9, 3.7070837203897667`*^9}, {
  3.707083786936101*^9, 3.707083789301086*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e03c25a4-5e92-4ff7-bc64-fc076a836fbc"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"FresnelS", "[", 
   RowBox[{
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.707082327181628*^9, 3.707083481437709*^9, 
  3.707083560175112*^9, 3.707083720814982*^9, 3.707083789555517*^9, 
  3.707083887216364*^9, 3.7070841056355658`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d68d38b7-40fd-49be-868c-2a5ce221fa35"]
}, Open  ]],

Cell["and we can plot the function numerically -", "Text",
 CellChangeTimes->{{3.707082332376697*^9, 3.7070823694246387`*^9}, {
  3.707082411000349*^9, 3.7070824422633743`*^9}, {3.707082474599085*^9, 
  3.707082496047058*^9}, {3.707082721017335*^9, 3.7070827244755898`*^9}, {
  3.7070838064545918`*^9, 3.707083806532132*^9}, {3.707083870131282*^9, 
  3.707083877411419*^9}, {3.707244339570795*^9, 
  3.7072443416753693`*^9}},ExpressionUUID->"65d86aa0-667f-40e4-914e-\
06de609a511b"],

Cell["Plot the integral formula:", "Direction",
 CellChangeTimes->{{3.707083007447394*^9, 3.707083015263982*^9}, {
  3.707083882459165*^9, 3.7070838829472647`*^9}, {3.707244343298633*^9, 
  3.707244344826666*^9}},ExpressionUUID->"f18ef22c-86b6-4867-a485-\
5c683c714e8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7070827284167633`*^9, 3.707082747683846*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c2477eb0-963c-4442-a87e-085d05071cdc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hcXsFHP87L/9X/jf/i/4H6wYyEI=
       "]]},
     Annotation[#, "Charting`Private`Tag$35383#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-0.8948311827218993, 0.8948314299351622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.707082740686246*^9, 3.70708274798053*^9}, 
   3.707083566714962*^9, 3.70708372583501*^9, 3.707083793531836*^9, {
   3.707083884647513*^9, 3.7070838888892107`*^9}, 3.707084105785852*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"911374e2-08bc-4610-93fa-55ef74deb028"]
}, Open  ]],

Cell["\<\
However there does not exist a closed form solution to such an integral \
equation. \
\>", "Text",
 CellChangeTimes->{{3.707087612600668*^9, 
  3.7070876289185047`*^9}},ExpressionUUID->"8346eb3b-e356-4679-b905-\
1110d053c7ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theory", "Subsection",
 CellChangeTimes->{{3.7070809670284557`*^9, 3.707080970804514*^9}, {
  3.707084459539116*^9, 3.707084460602927*^9}, {3.7070853130222063`*^9, 
  3.7070853173661327`*^9}, {3.7070890824895277`*^9, 3.7070890878576508`*^9}, {
  3.7070898214234447`*^9, 
  3.70708985359861*^9}},ExpressionUUID->"622ac726-c9f3-440c-9cbf-\
7872902611cf"],

Cell["\<\
We can define a series of sinusoids that converge to the original function, \
with the correct constants.\
\>", "Text",
 CellChangeTimes->{{3.7070827583891153`*^9, 
  3.707082818962356*^9}},ExpressionUUID->"5c16a9c9-fd39-4147-8047-\
6b456cf76496"],

Cell["Find the first coefficient in the Fourier Series:", "Direction",
 CellChangeTimes->{{3.700774271565714*^9, 3.70077428101515*^9}, {
   3.70510436631329*^9, 3.705104402940385*^9}, {3.7051044918334694`*^9, 
   3.705104547547656*^9}, {3.705104583096689*^9, 3.7051045898510756`*^9}, {
   3.705105030495279*^9, 3.70510503226538*^9}, {3.7051051046345196`*^9, 
   3.7051052440884957`*^9}, {3.707082936387226*^9, 3.707082964592149*^9}, {
   3.7070840887042513`*^9, 3.707084089352476*^9}, {3.7071619403799877`*^9, 
   3.7071619428179913`*^9}, {3.707162207432043*^9, 3.707162212747233*^9}, 
   3.707244370374386*^9},ExpressionUUID->"36933453-a641-46f1-a39f-\
95ee348cd56f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierCoefficient", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.707161945066925*^9, 3.7071619561324463`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"c4e2b457-48e3-45af-aab7-c74f5725a19c"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SqrtBox["\[Pi]"]}]], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", "4"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox["\[ImaginaryI]", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "4"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "-", 
         RowBox[{"Erf", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "4"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{"Erfi", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "+", 
      RowBox[{"Erfi", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.707161957372003*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"372559a8-e691-4fb0-926c-9b6bcfc1be6e"]
}, Open  ]],

Cell["Express it numerically:", "Direction",
 CellChangeTimes->{{3.707244441961936*^9, 
  3.7072444448876753`*^9}},ExpressionUUID->"906bbaf1-a89b-4a47-b807-\
c6bf8923487c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.70716196271912*^9, 3.707161965601492*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"40b0ac89-794b-48e3-8275-cdeef7f3561c"],

Cell[BoxData[
 RowBox[{"0.09622703422072545`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.3877787807814457`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.70716196588172*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"2bcbb310-1d7a-4963-b5fc-64632bf9264f"]
}, Open  ]],

Cell["Create a list of the first 3 coefficients in the series:", "Direction",
 CellChangeTimes->{{3.700774271565714*^9, 3.70077428101515*^9}, {
  3.70510436631329*^9, 3.705104402940385*^9}, {3.7051044918334694`*^9, 
  3.705104547547656*^9}, {3.705104583096689*^9, 3.7051045898510756`*^9}, {
  3.705105030495279*^9, 3.70510503226538*^9}, {3.7051051046345196`*^9, 
  3.7051052440884957`*^9}, {3.707082936387226*^9, 3.707082964592149*^9}, {
  3.7070840887042513`*^9, 3.707084089352476*^9}, {3.7071619403799877`*^9, 
  3.7071619428179913`*^9}, {3.707161979000759*^9, 
  3.70716198135273*^9}},ExpressionUUID->"d76be9ea-d391-440b-9c3d-\
832508092c46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FourierCoefficient", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7070828231491413`*^9, 3.707082918521634*^9}, {
  3.707083184464862*^9, 3.7070831946379557`*^9}, {3.707083575795192*^9, 
  3.707083579112094*^9}, {3.707083730976529*^9, 3.707083763911627*^9}, {
  3.7070840906821213`*^9, 3.707084090849371*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"2e4af88e-e604-4160-8c85-55497ae1d28b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SqrtBox["\[Pi]"]}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", "4"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox["\[ImaginaryI]", "2"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Erf", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "-", 
           RowBox[{"Erf", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}], "-", 
        
        RowBox[{"Erfi", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "+", 
        RowBox[{"Erfi", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SqrtBox["\[Pi]"]}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "\[ImaginaryI]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Erf", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Pi]"}], ")"}]}], "]"}], "-", 
           RowBox[{"Erf", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Pi]"}], ")"}]}], "]"}]}], ")"}]}], "+", 
        RowBox[{"Erfi", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Pi]"}], ")"}]}], "]"}], "+", 
        RowBox[{"Erfi", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Pi]"}], ")"}]}], "]"}]}], ")"}]}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SqrtBox["\[Pi]"]}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"9", " ", "\[ImaginaryI]"}], "4"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"9", " ", "\[ImaginaryI]"}], "2"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Erf", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "-", 
           RowBox[{"Erf", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]], " ", 
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}], "-", 
        
        RowBox[{"Erfi", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "-", 
            RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "+", 
        RowBox[{"Erfi", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.707082851311145*^9, 3.70708291918852*^9}, 
   3.70708319492381*^9, 3.707083770026236*^9, 3.7070841075044403`*^9, 
   3.707161991388599*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"3bbacb7f-5031-4428-ba67-37390b05a422"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7071619917744703`*^9, 3.707161995448744*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"47fa9615-6c66-42a7-8b6d-cf2b5304abcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.09622703422072545`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.3877787807814457`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.008375725532725026`"}], "+", 
    RowBox[{"6.483528991463317`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.340172932484786`"}], "+", 
    RowBox[{"2.7755575615628914`*^-17", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.707161996140904*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"1c3dafcf-bbd8-45ac-82bb-e69f5312dc2a"]
}, Open  ]],

Cell["\<\
We attach these constants to the corresponding functions and obtain an \
approximation.\
\>", "Text",
 CellChangeTimes->{{3.7070830689608507`*^9, 3.707083094430335*^9}, {
   3.707083125168375*^9, 3.7070831568296328`*^9}, 3.707162076114066*^9, 
   3.70716212414924*^9},ExpressionUUID->"d645688f-9416-4045-9104-\
68dea9d0a22a"],

Cell["Create the 1st order Fourier Series of the function:", "Direction",
 CellChangeTimes->{{3.707162126373206*^9, 
  3.707162133163906*^9}},ExpressionUUID->"91c79bb8-3828-45da-9be2-\
a91e4e4a63e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierSeries", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.707162135125408*^9, 3.707162141589246*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"1d0e8a38-9221-4cce-a9a0-84e05dc66d31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      SqrtBox["\[Pi]"]}]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "/", "4"}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", "4"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "x"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["\[ImaginaryI]", "2"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Erf", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "4"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "-", 
          RowBox[{"Erf", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "4"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}], "-", 
       RowBox[{"Erfi", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "+", 
       RowBox[{"Erfi", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}]}]}], "-", 
  
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SqrtBox["\[Pi]"]}]], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", "4"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "x"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox["\[ImaginaryI]", "2"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Erf", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "4"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "-", 
         RowBox[{"Erf", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "4"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}], "-", 
      RowBox[{"Erfi", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}], "+", 
      RowBox[{"Erfi", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "4"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}], "]"}]}], ")"}]}]}], "+", 
  FractionBox[
   RowBox[{"FresnelS", "[", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], "]"}], 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]]}]], "Output",
 CellChangeTimes->{3.707162142531703*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"4d9e1cb0-f830-4c2f-b625-ee420e93c240"]
}, Open  ]],

Cell["Create the 3rd order Fourier Series of the function:", "Direction",
 CellChangeTimes->{{3.7070831401652946`*^9, 3.707083152997408*^9}, {
  3.707083923667509*^9, 3.7070839243708553`*^9}, {3.707084702919643*^9, 
  3.70708470422338*^9}, {3.707162255624556*^9, 
  3.707162264585609*^9}},ExpressionUUID->"a977bd28-5adc-4a0e-ab01-\
ad11631cd4ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourierSeries3", "=", 
  RowBox[{
   RowBox[{"FourierSeries", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "3"}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.707083096517077*^9, 3.707083110054328*^9}, {
   3.707083173542686*^9, 3.707083173661899*^9}, 3.7070834967758503`*^9, {
   3.707083902078637*^9, 3.707083932402717*^9}, {3.707083988868984*^9, 
   3.7070840192089453`*^9}, {3.7070840933939753`*^9, 3.707084093504867*^9}, {
   3.707162245242852*^9, 3.707162284249796*^9}, {3.707244523627083*^9, 
   3.7072445258223124`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"7f563e3b-7d60-429c-ab3e-2de2f557a241"],

Cell[BoxData[
 RowBox[{"0.24594267872608613`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0932355687608362`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.023806949253527943`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.25`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]}]]}], "+", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0932355687608362`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.023806949253527943`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.25`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]}]]}], "-", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.00452542381865004`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.007047930012502736`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]}]]}], "-", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.00452542381865004`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.007047930012502736`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]}]]}], "+", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.21368766335118572`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.2646794410731764`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2.25`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"3.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]}]]}], "+", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.21368766335118572`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.2646794410731764`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2.25`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"3.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      "x"}]}]]}]}]], "Output",
 CellChangeTimes->{3.707162286020524*^9, 3.707244537199074*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ac4404d5-e3dc-4d04-9edc-4455fe6bef03"]
}, Open  ]],

Cell[TextData[{
 "and we can plot said function with Sin(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "69f34f23-1255-425f-b841-e80799436ad7"],
 ") to compare."
}], "Text",
 CellChangeTimes->{{3.707083206564743*^9, 3.707083242764111*^9}, {
   3.707084070115533*^9, 3.7070840729131308`*^9}, {3.70708471167137*^9, 
   3.707084712903537*^9}, 3.707244191429131*^9, {3.707244536756668*^9, 
   3.7072445386375437`*^9}},ExpressionUUID->"221d3ac7-1460-4662-b8da-\
b483bcd8f6cc"],

Cell[TextData[{
 "Plot Sin(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "80d8eefa-4377-4b86-b0dd-0eb8cc962542"],
 ") and our Fourier Series approximation on the same graph:"
}], "Direction",
 CellChangeTimes->{{3.707084122391655*^9, 3.707084139711879*^9}, 
   3.707244194075302*^9},ExpressionUUID->"3efef084-f8aa-41ba-93b6-\
8ec4a56d4b0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", "fourierSeries3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.707083247121668*^9, 3.7070833002282343`*^9}, {
  3.707083946028023*^9, 3.7070839705389643`*^9}, {3.7070840253809223`*^9, 
  3.707084028314495*^9}, {3.7072445285112047`*^9, 3.707244530758832*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ed0b8303-3f39-4646-9649-e9069f1d147e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rozea0eSMKb08lvwNTq6ezFj3f0pEp4W1peGWNPRx/5fF47NkLDbUJj2yYSO
Ctp/+6cx+BJ32awPPUVH++5f5qxfIOGcQ5ziVzU6UkllU2f4CZhfmjKPOERH
HkcfJexcIeHtM5UH3/bSkVS97S+9VRL2b/aOiN5NR0XKhZ2yDJ6tiCwtjtlK
R5p39P1zGPqK/LqxOAE68prTOLzM0KzYTCCRSkfy7Zcsxhk6TDdMIXl5Gl0R
o9gGMPSRf4NmqVPTyGt0oKyfsX7zlX3304emUWaVHZXG2P/OrMvXjI5ppC9+
6mXM/3n5cW5hVv00um7T2ijEiDd+HXUku2wa3XQpNT/CyOd4qC7fbzyNNKXV
Xgsy8u2XeSePMqYR8a516iudcf6e32hDcdOoUSpFI4rB1w5/f8Su/zqNzoyp
ZRnSSEgTLbI7EjSNdsVQhmNHGPW43Shm5zeNwqR7HOMHGPHmD3S88ppGpvym
U2Y9jP4UnAv56TyNUuNOsqa0M84/c/MGXutpVOf9xdiujgQ9Dsm/isbTaJsX
paagklHPs4f8rHWmkWNFr0kNg8+3L5uxpCtMo676m6uz2Yx+1L2K2qWm0ft6
Yat16SREfXG7x75jGp0X0jreFs+o/7GQaXPOafRrh9dBn88kOAfGJj1enULw
ZMHdjsHv2b3Z1xOnp9CTI5nlCy8Y/efzr5fSMYWGJW4LHrlHgkm5cP331CkU
pPBnmmDwe4iwbEBt9BSqtX2hVn6ChE571VPLn6ZQavVyHC8wzlPAskDPdwpl
xNLMfkuScM84NH3WYgqNkpr9LfOM+yMq6Zao/hRK/pVSqzhGA9Z5JKOjNYWc
bTZPnOmkgX9IV+Tn/VMouspDExUw7ovOne802KaQ6/jczqAXNCi6GukcmDiJ
1Lofe2cz7ivuX+lyORGTaCRY7r4iE+O+4ikc7w+eREYfNQrdyHFoSey/pPxo
EuVsupdrVjkOY9MSJl2mk4gvYF3FM59xWOcZo7iXMomsRPQ41ckx8MmQLBGY
m0C3D+vNVbeNwSIt+uz02AQyDZ4SUCwbgx6rKI+s5glUufVhrm/kGKQei/ij
ljyBemOr00xMx8CA7fNpU6sJ1O797ip/xijs2bKzkukeiQ5GttWpWIyAjCIp
8216DJ274rLgfn4QHmmMV/+8O4hq52we5V/qgj/Hx/QUbBi+5zjhGqfTBUy6
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
BDyFjMoMGZydlnRVdtpjBBzkd2gjBjc/LDyaXhM/AnvSzEXLeScAr6SmcHCP
AvvgxJZw2wm4m7af3olHofj0dt4z6ychcJTTU4wRl+De7k2OwpOgUJl5XEZ0
HKx5v4m+lZiEpj9CGtzy47BYLqPQrDIJfi2+FVrG4yBz4oiFtc0kRIZ5r4v6
MA4B6hYxt9InocZiientFhq0ie1IC8ydhMofXES6JA2kmHtz0ksmgVoj8fqr
Eg3+4GvV822TMOQcbt5tRIMZVfc5L7Yp4Cfltg4y+MX80AfN1yZT0Jdz5dL7
KRpEbT6vl2Y9BUHF2QU6qzSYnhU923BtCmTlksf/cJLw4sf3G1seTIFjn83T
tR0kIPmsN1+jpwAFlhp9ZPAXz3qPz/kpU6CcqeBsZ0iC2SRE9/+agmT1FKWp
cyRMJRVnS1VPwbZU6YATNxl8L9vUnTI/BfMK29YPB5Bwi+fjaB3zNIQ2vS6M
DSbh96jlzAzPNHSOVMxLhjH4L3aAQ2XnNFjJ61WbJZIQ/ix2/bn/psFieNqe
8wcJ5BUHYc+D06CVLOJ55xcJT/fM7vtzYhraJw+MujJ4tZ6ardxnOA25GUbq
/Aye3TlwX51qOQ2mcw6sVrUMni48pit5ZRqWayvi7ZoYPBrJZqrjOA0/Y1h/
ibeRwP641PqGxzTg8OWEj10kGNm8vObvMw2OKjTWkj4Sxndu9KwNmYbAa+bt
x8ZIOHTv6+28yGn4XJjn6kmS4F0veyk5cRr2UZqvO06RUCGbbRaaNQ0GfGxq
22dI2OSrdcr/DyO+mXWPPOf+/391LdyvmAZekMl6t8DoU2WrAzcap8HFcvja
xSUS6IGjEhZd0yAmpSPet0zC0THXrToj07Cil3t76yojf01WPmU6Y373nn+s
ayTUfgmgSK5Ow9G/HWPhDC08LzyziYMO4V7p8nSGttOPGWJbT4cNNnOH5hk6
OfZgG30bHZR8XV4kMvQiy5+/veJ06Dz2JPv/7wNonD+dX7uPDkl1q2f2M/Z7
ldGakadMB87NOh2LjHha+S/HJqvTQVnh/KQzI97dV6c/h+rSocwib8tXRj4O
fx689jelA6tv0OA9Rr5Z23ie3L9Ah2dH34+yMerB7Bx898Z1OqzYCWceZdTr
VNXuGxbOdEjdsLNNnFHPoD0pVjoP6GBkpTWePUpCl5eqofIzOrjrNN1fGSRB
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
Ok3A/cRNVTnKQnynyzrh/CQBUfsiqO7qQZxdNVX2J8mGxT1KkQ5jAqzh7xB0
RJINPZnzJJaXCHDhpmoTS2k2FAzs8/kcIMCVj++2Ga9gg8pv2/M0RAT4S/CW
qY2abIislylVFPDxEf348vXabHi/wKZzTiIfd0+JB69BbOAv7B4bMudjoWuT
tKwRGzQTp60VC/qx6F4fTRFbNmxe7m+6x6kPXxdrn5myZ4P8sVcbD5B9mIt3
Vo46saHD7F1R1NNeLKu+yKzPgw3KSmHfW8d78AbJZx4fA9ngsTrQaos7Dx9u
HMp4kMmG8KtLfJK43/DXcCuvmFw2yJYpfTJ80IkdDcu1o16wYaVeVW/k2k7s
URD5NvAlG9ok6jXUt33FQfc29Lo2sGGPmongt9w2nHvkr5XaM2y4FnazLTe3
ATs8/y4fL8KBdPkfoW9u1GMpjreMmDgHpJTo5mHPT9in8Oz8Tws4YEJ6BXSp
1GJtqWuzJ5Q40PVzeLhx4Wtc8Tax5a4pB1hg8Y/CnXjcoNF8YzKVA1Fekjst
h2vRlRDrcLtsDiRryvmScp/Qpm/twVV5HFCXK75nuqMe3YngXYgq44CVbKCn
XORnZMsfdl/bwAH9fh2nuAUtqCeONLb6xYEgKvODjGknihmLNMCiJOjW8wpG
GzrRLhMp/dUECbxplYu6h76h9ClZrSEpEtI3moS3m3Whk+bKSsEqJGzLqlgj
ps1DE8T2eYXmJCz2/Jog/7gPSQqpWxWHSVDlB9abifajdXUtijV2JDRFF2Vc
tutHR2JOGXScICG4OiUni8tHvme3NfW5k7Dz3MP+23/yUaQt4TzsRYLGqb/7
LPL56NWqxODf/Jn3/WqieocGUJuYuyz3MnP/7q+TVokDaKxfK2PJNSbedhJU
BANI+UldzbobJPQWlQQ1+QlQuK7IfNMUEua77myMPT2IUhXex1tnkBChF+2c
mz2Iyufe/d3xCQkjI3VzjHiDaPSNuplfEQlr5UwyenYLEZU503URk7D0V6hn
5xkhUop44x1SScKj45qPDVOE6LD50dsPP5Dgn7iJrT8uRN5b1iul1pMws74p
umYpw59LJ/Jzm0l4a1dtlLOVRimzr3YV/0vCqNfODp4NjV52Rnyp/EZCQlqn
gdsZGn2ptHb50EsCZ6dO+rabNBp+rDTdJCDh7NZQN6t0GnFCRkI6h0jYf1V/
XWEZjVa7Y7mBMWaeXVFlh2tptO1ASNboNAkly0S0dRh+ttSw2DY7h4IfacMC
iwEaeUqv+iguRsEOP+Vj2aM0uj4ltFvApoDL2e6oO02j5H+LvsvOp2B/nM7k
r1kalb4Muqi4iIIY0y8O4wwfNyaZSqrJUhC3d4XiCib+PWhZ0mYFClory3+e
m6QR4cL/Q0+RgtvFvrQYw8erTF5U7l5LQd6Nk1vKe2mkq37J/KAaBaZq8Rbp
LQwvL9zbY/sHBej5ck5FNY08xmR8j2+hYHOdn7kEw8PBX3jinlspuG834HU+
keH1ktw7Z/UpOHqxuG/FdRqVxJ1fG2hIQdukq8+YO1PfJaOisD0UyNZMLJ/Z
TyPacZFxzAEK2sXYahrqNJIw6myNP0SB4pM1q+M5NFq5Psst3ZoC+/JPH/V6
hEiHe+Zn3lEKJNcUay0tFaKDwzvCSx0pcM6ueaIWJURXC9pyak9S8GdzhxH1
uxDFx6ZCizeT3/OR2deZQVTk713XdYaZd5ey9kTVIBLs4IyMXaagL6vKUGL/
IDKt09kkf4eC0JItkct2CBChwy4veUABr+TekpahAVSe3GJsk0TBTHyyk+39
AaTud8Y+NpuptyD379ZePqIU8kNlqph8+qHPMq360T/XgqQLqymIlReW3xP2
ofPD5omWtRToeLC4sRf6kKBqND+mlYJTh8WHZmN70Vu3jV2LhinIahG3ic/l
oQuNIu7Px5n++Jl6Luo8tAXqJg7+pKCYWzs3LbMbpSz0oG5JcEGlff/a0gdd
KLAoS0tSgQviZTfsW491IpBYG0nt4cJr8tiKrKVf0ITnhGz2AS6Mp7J0LRqb
UE7r60cmFlwofjqRNRrWiJblOBWHOnDBNrw6M260Hs2YJ/cQZ7ggaswz/mz4
HuUnKWwVT+HCuWDyYZRLFnIn6dcpGVwwvrwrcIdJIlrjW2ZqkMuFqvXKDnI5
oejWblvnKyVcqBYzk6rSfYhPDd27Oa+eC5HqebuLGkqxirXLsqRmLqh6ZulE
PynHnZVaafrtXBARt49efroS77/TXHaxnwubNT+srBt/iyXmphqtoLnQnSi6
y+B5Dcauvg0vR7lwXKMwLfvkR+zz2cDu6BQXcvoWqFktrMP/2ycG/98n9h/1
4DBf
          "]]}, Annotation[#, "Charting`Private`Tag$13229#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVVnk8lN8bnUHMWGZkKRWFkK3FGpWuinYqRdaI7BFCQkJ9USQpJSGVVERE
WVLPrYSsZSfM2Kas81qzxW9+f72f87n3vc95zjn3fh4Z+wsmjlwkEimfTCL9
/7sFrRpaXqbjjw//9rYNdMKFuY1Rc/N0XH4nsAtwJ+TmqylMTtMx+7C5gOyj
TlBXNLJnDdNxQ6urh6VxJ2xfeb2jppWO3R3701/n/AL9vvGqh2/o+EdsjL/z
6Q4IS1l2uZtJx1KRKUtGyh3w5bQQ363ndMy14KVdstgOBjWK+0If0fHPaJE4
hbR2OPTO9oNTJB2HpHzb49DTBiaRtVkatnSsaPBfgphxK9zd8+vQZks6jsjy
FH6zphWaFv78VjCl4/1yVNtf/S1g5sUjt/YIHW9Mkn8/crkFrCx2JpO20/EJ
pRxT6uNmOKfyKqaWRsc+y96nfjc3wqX66x7On2jYMl2Cr2q2HmKG/VunimjY
5QVaO3K+Hp7yue4Jz6dhN8FtQcbMOqhBRuIpL2mYckyF3l1WC7K54h8b4mm4
KLjwqud/1VAXlyG425mGrztHPbnFKgcFk8osMWHOeY+EP2/0L4GmJoGhz2eF
cHzRb5uS369R2Ll3n7KshXCmt7AYw+wN2jJ15m7CaSFcVP5ASrovF0WJvt3l
aiSEbxr47/tuko/0TMxvC+sK4fI5j84i9SKUUZ+uaSsshA2Ua7cEz2IUUKV3
dfGTICYZbW7b/qwKyVv+PskqFsTE/uJK+13VqGEwTvFHgSCWcTmZb9JcjVSp
/T+fZQpiy75B6wDeWtRz4KbckfuCuP+tSOQjx3p0+FvL94cegjhgv9PtdP4G
JIUviG2XFMSxV7fYOSS0oBoRLd8dqwVxOd+sxceOFhToON+oJyKIS87d1Grf
0Ipa+P+7a0ARxCkm3U9NXrWiONMkEZMpAUxjZ5LUitsQ93CZsEeNAP5c1niq
rLoDDYqvFXoWLIAfXLWM/vyuGyW6MM5nXBLA2yrHd14b70b7P6TXvPIRwNVT
aRaDqgz01G5rTK6LADYRfHHl8VMGss4yEPh0SgD7HAil1RkwUb3+BWq7qgD+
IXnCO062B71zL1tB7+LHH/yPNAe+70U60p5qGa38WD/p+ffW+l5U0rTaRq+B
H6t+Onmf+NOLsJ57gXsFP3aQVhA6tbYPVdFFHCrz+PHAlhJS6+U+xMy3xWER
/DiKT9TGT6Uf2btQRyTC+DF1t5yynX4/GpDMX50bxI+PS7tlkkz70dB/vBe6
vfjxrnvljmev9KPp09lSO634ceyiiX9iVT/iX5wPnNrKjw9SJFPvmw2gW7np
GdHK/Lh2m6XMe6cBJOxo3CArz4+3kvZ6RfgPIPG6J0on1vJjddX0czoJA0g6
7WBbNg8/trm171FH3QB6emqC23CZinVPKDhd7hxA8tTkrZ1zVPwhO463YnAA
KfuwI/jZVFzmfpnlwc1CWgb3tZzbqXg2WNOgX52FimbR2aVGKj68IrBxUo+F
dmQPxiTUUbGNWnFi7kEW0l+l1//1KxW/TvGhq9mw0JcqFt3qExXftr/hOuXE
QoZX43ZOFFHxnt1Nh895sdDhP33x0jlUHKERwX0onIVqk299KnxJxXqBr2I/
3mSh4ye2Dxk/o+ISj0BKdzwLmZbc3HMlkYpznElI9ikLtXlqeojdpWL9pfQS
w1csZLmxOzHrFhXLX2h9KpbLQnYxakR7OBVXXEb7C0pZKLAgPqL2CodvZMVa
uS8slNA5Kfk5gIptPcf/HKpgoVwe0/yCi1Q8U/ckRb6GhapU3x966UnF58/8
UCj8wUL9p1YzH7lSsapi1MWlJhZaCg7wv32Oivurfl9caGMhieftgtdsqbg8
T2ZNTicLadTueOZvScVDh4JNVzFZyHj6ka6bKRV/1DCR1OxjIRepf/U2x6k4
20vEno/FQuGGZ5xOHOHoH6MvGfeHhZI9YNFgPxVfL/PdUzfEQu8TpO/q7KHi
WgXr759HWOjnxzAl1V1U3PG26LXbGAuNDPTChu0cvj5nByrZLMRLMzATVafi
gdt7PTsJFpLWfj7Cu5mK37nY7Hs+zkI7z/Bem99ExemPKs9unGAhswjnNWOy
VOwkmlthxsFeOZVveqSoWFnI1Bdx8M0Wpf3NElR8YB3NpYvzf/rSzc5KUSoW
kDuQvo2DPymM+JTSqDjBOkxFl1Ov3diImkul4gZ0kvyXw2/KP+fxMx4qvhHm
ouw2ykK0x3TtB8sUfONf2Ov4YRZSrPCquTlPwYNP/WK9BlloL/unfcg0BTtY
bWnj/s1C1qs15rwJCq4ay4o/2s9Cl9C9247DFHy/l6vycA8LxTtPy1uwKPie
qfW1pS4Wen3brPRoDwUntk7/cO5gofLCQhP9Tgr205P5FNHCQj0MiUGNVgoe
9jKwsGpgoVXbfomvq6XgDjGPNvnvLLTNfNdrWiUHd6R1ryvj5DU0ZS/XVwo2
TFVsrfjEQld/2F4YLKJgkVf27D35LJQ0i1d05VOw9bUOXeFsFiqQlk3+kUPB
yaxtNfcyWOiPV39lYToFXw38rvQ5kYVMVrrKRsRRsE/n3exXl1novG5V0eVo
Ct7O5y622ZuFIs+qHPOIoGDK5IUnzi4sVJo3GnQqmILvso/ncZmxkLyJT7Os
CwX7JsQENm3m3L/ARvdVDhRst3C9S2wj5z481eTiP0PBKZFJUUISLBQ7MbNl
/CQFnzs1YaVIZqHZ+KAoQBQs+EAjn/JjAP2W/Dy0fwcFh39Y1TrzeQC1ZPAa
1WlSsJtxrnN8/gDKL7mzskuJglc0Xa9u4Lwvnr0vkuZFKXjv5bjGq5z3yfr8
6GIYjYIjmjfcYBoOoCMz6rZUKgUXTLysJDQHkCL/p40SS3yYaIynyYgMoD61
ptdaf/iw/51Y6e+V/ajhwxr6x14+HOtEi8x514+woa23QRcfLlB4PWL4tB+l
WgxpnWzgw8w+G2pMYD8yDyOBVykfZz5x3nB1Uz+q+6H6MyuOD/cIH/pw4mIf
KrX00dCI5sNDLoLpYVZ9KKu/MKHkPz7sNbvqouu+PhQ1u9fyeyAfnju+3s1e
pA/tk7boY53jww0z8tErsntR0YX/pmV0+TAlL518sbkHPaN1r0ns4cUiNn1U
vxEGirdCfLqdvNg1iv73UzYDhb9Mm2pv4cW49HjMI08Gst/rUL+uhhdn35Lv
EGZ3I1n/P9cfv+fFlg7196jDXehp1wQ7I5oX+8eNlcn/+IXSXvOVv9PixZm6
X+wIs1aUfFjNp/HGCnzdaLR4h1Y1Cj9/NkDpEA/2YC8r3Et8B92xZ5JL9vFg
36jO3vLW97Ajzwof2c2Dw3aqU7asKoKJaVOKpwYP/jvpnHotrgTOXj2c+FaK
B+/9fkw8PxBAP16jaOcEN36oplCiEVcGS4UrZo0eceOyve9vCJXXgmUHlyQj
gRu33G9+jE/WwfvFZeQVx40DNBWniznzj+ee+cj4/7jxhIrMNT/OvNRVNba6
9QI3/uUlNepI/wmlXa3b7Qy4sYVoQrinbCMEcWde8hnlwnpvmvV2T7aA58Mz
vHZ/uPDK0RxxH8VWsN8qmmDUx4VF17X5aNm0wmGr4LeK7Vz4y6bH3s7fWkEi
33i0u4wL724MqDwb1wYF9pP2R5K58GXfLKtlege8nH0xrvOAC1upbV+q1uuA
R7HWoQrxXLhmSSl/nXsHhJd8SyFHceGLTwR89pR1wAmRxLbCi1zY7Fa3X7zX
Lxj7vMtY7ghnfZ5nIS+3E3pPj3eu3M+FWyOKhqxbOqF59Ln7sj4X/mOdox66
0Amla+g3OrS58HkVHpvNBl0Q7d3zNU6WCy99+hu6sr4LQvjum4RIcWHzdsNo
T6ILfFIO97hLcGHrvBd70cpusPyev7SfxtGjITdS90Q3KMpE6P6bI+Nmv79h
4VXdIFm4o3JoiowDIryWPH53A92IbdbGJuMHJUfmKrkZMBNg7ps/QMYiS2kB
1TsYUPZD+Y3rTzLuitH0nX7CgCInht7pGjJ+flf19bESBmQt3q0xqCBjf0f1
AvEGBsQr/hvc8JGMnSUkr/ctM+BsaL1cy0sybpHPtddTZoJZ++PdXc/I2ENU
dnufBhMOq3uZ96eS8aTWxAl9PSZo9gvHTNwj44cU25wNx5igpNfzfO42h6+O
YfKT00xYfz8PSNFkvFglpdRhywTKQZNJWhgZtz8lX/O8wIR/abJCq4LJ+OLo
Np4qfyZMzE0oSF0i401Fj2J+XWHCr6y7lioeZEw5d1RBOpoJP3jO+aq7kHHJ
0pNJkztMKLPRjNV1IGPB6yf1dz5gQg69+fMBCw4eZ3SoPGXCM5fnv4xPkbHS
x28jGi+YkPjZb9r0GKeexHre8SwmxKzdT7c5TMYRXl4CDrlMCLu4SumcIRkH
Fhr23ihggn8Na6+7Phnf/abo7VjEBDf5QmufnWRsXpjxePoDE2xDIv0va5Px
voPHzHYAE061no4LVSPjTqV3IRpfmHBom2JmpCoZnzrtyd1TxoTdN2a/xm4i
41eOYj/2VjBBo7eyK0GWjFV/GPw0/84ExZ0P/yZLcerteTIlW80EqXuuK9Ml
yPhqe73ikxomiIzqqmSJkrGPZ5BNYy0TePfzG76lkbF+zclrxXVMWEjtOFNM
JePZMaGYk/VMIP5mBmAeMt6x45zbEw7uPx4UX7FMwgLZq0SecXD7qyOv6+ZJ
mCYyfMmcg+u4JMubp0lYXzX7zmfOeV+tRhidBAmLMbeYdXPqFRWUzvUNkzDd
4uDHHA6fbKFbosMsEi5XaQN1Dt+nTjabJ3pI2N7362k3Tj8PYPOBuU4Svjw+
fdWU02+MxJIdqY2EHdfZa05x9Aj1rgvkayRhQR2yz36OXn5VqfdodSQs6t6o
fZSjp9vGCzni30k48AsjbEUpE84Eo0rJMhLORJonfTh+HNzCXFAuIeHE28Kx
Thz/9CJzxdXfkXCDYeviKMdfdWboVt1cEp7scVhU5Pi/Ll7G4UAGCfsyE78W
JzNBeHg82PgJCSu6FSbSOfnhMfhy3zSZhMd5otas4eRrbNq+yiGehM3t/QwO
XGdCn7FGv9stEpa20OM5z8ln2wvuJe8oEj57Q+iRASe/XyzS1UJDSHj1jbPX
VzozIeHjQGKyG6e/WIt/6ww5/AOSQrY7kvAtu9JasZ0cvzWOnWuwJeFsvxsP
CrYxoeRl0VaKKQmnfEqOHFzLhO670eUXEUffDYK+5i0MeGGs/5q2g4QveXqY
41IGeFGn77zSJOEtSQm6AU8ZwHX1jA1DiYQtjGxV290ZsMlNbeqwGAnH40he
15luIORY7QM0Dp/S3YRFazcUM5IglErCBlkKd1MKu+FBJmWVx79l8Jvf/GC9
fzcwQ3P2GTQsQ2xLtYboMOf92jyfOhG0DKlq49dV33UCzzMHN0XvZdDduKPh
SnQn3Jeo1TrjtAz1MvE2Smc74QN3Ws3348sgsbTG4w4/Z3+H4Xya/DIo48Si
d6a/4H7EHdNj9Uswe7airL22HRQX56X/K1sCJ1ufl6uT2qHE+9xISfES4HwG
u9ixHRjW268ppC+BQW9l9JaFNo5+Xbn/Ajj7X97MHlnfBiUMRcHXsktgQk5Q
czvcAsG7yNlJEkvgYV9w1nFlC+g9bDe6QVuCiaSxFf2tzYBNbt52mv8Hz+Ss
gj0dmqHi27CITMM/YKzeuavGtwmasnLW3A/7B49GRO1OhDXA2CXNTaHMRfB6
Nb4sElsDuU2ClZ4ti7CwbBPEWK4Gb7UBF5uaRUjf9EeK5VUNU0MJmTuKFuEP
OkJ5dbwKFmz+bp6+vQjfy3QtdPgqgWJQoumGFiHv8tcPkiZfYaOw/t5TqQtQ
tLV892zbW4jd1hPodncBtF1oyvP+eTB7PDw/NGoBJjYuvv8omgs1d8rksn0W
QFHfaFLvbib4ih7i4z2wAMzj8mdDU1KhfJVJTSF7HrbV8BzbcC0WuUmdM1u3
Zx5UA1R3qjp9QG+Vo9x6+2bh1vkKXt/5BrThp12xSvssHCxTsOO2bEQxl3Qp
fnWz4LezxyyyuBE5lg095yuehbWR2THOAU1I4oxRj2rsLCj84d5uP92MrtwR
Mb+kMwvLXh2n+Yfb0MHZZEPBW3/BffLJhxsfutG7VL97puF/ofeWVhp5NQPJ
Ghr3pV76Cw8ZiS57fRho4c5yqJr9XzBwGcwSFGOiHBX7UrPtnP0mjn1BlUwk
ZrtJ40nPDPx1bbRRUulFjG950traM1DaemzV0cZ+FHxyzkBHdQaq4jc+uTfX
jyR69F13yM7Az7ScN/kbBtDxxfq83bQZcMG3PS+6DyCsPrb3AGsa2iMn1EZI
LJT2WNnR/P40hN1Vybfc+BvZX372KnBmCqaXC74L7BtES7zDtcEjU7Ch+dfR
fQ6DKOme+kRI7xQck1qxc9+1QdTw5vOOa3VTMFR892vSl0G0j8Wojs6Ygo8p
j1JTdg8huZOSY8lmUzDiuf9HisowGlBNUIf3k2AbsElOqHUEKYc8H/uTNQlf
ti20Zo+PIM/6d5kiTyYhI/YNjSQ4ima9W2SdoichKflTVCEaRfyFq0WF7Cbh
+tLCHZdno+gYRbFe23QSblW/1o7+MIruWehE2x2ehIQK2UjrxlEktWjOXaA5
Cf/qJNuoXGNo256kSUvqJNTtst4VYTWG/OIz31xfmgCW8SEdce8xVNJX4p4z
OQEZZF+r4xFjaF/Erz5y9wTk+J4a+/5mDJlVSza9fDsBvC+o3l+WxlCQ6eOC
GasJEC7PyouNYSOc8cZL+sQEbHPHa3AyG/HMgurh/RMQtvvlk4ev2Sg2iZme
sm0C4vUOIYNqNkpjyCQYrJgArVwzWV0uAg1sUz/hOT8Os793JbEpBFIO3yuU
yB6HXUMZ9pfpBMqXc/hvuH0cRLd9iueVJFC5a7pffM44KG7+dXqFBoEEPhSo
lT4bh3npGu1TOgQ6LvhtdCBxHHo1dzT56RGoPWfAUffaOFRGydHVDhBoPWlG
xiFgHC4mFsVVHSGQ/Qne7hiPcSC3ziVqHyfQyKSCGfP0OAz1PRGKMCfQNsPt
IvxG42Asw3JwtSaQ3/0DdRp7x8Hqa7zYBjsCLem47I9UHYfiky12ZGcC7bsZ
wJUnMw4u1eIjm90IFPUr6lPHqnEwm6flqXoQaGXIK+0t5HEg0oLq03wIFPFe
sVL4LwErFRdTRn0JND/2wmJyhAAfVthlkUsE8ty0abi5lwCd3q229MsE6rXN
CC5qI8Dtyvuj/YEEMkuUpz2qI4By5aT+nWACVf1If3yljAApWoPOqhAC7abK
qdmVEMCovKl18SqB3u559mVvLgH1eQ7aL0MJpBAoe0o+g4AenR8734URKOnt
kwG+ZAKeav/cnxROINqw9KWhOxw+v6fMT18jUPjGNEptJAE5/Wa+Ixw8Y7Uh
6c0VAkbXpT2yuE4gt3upKvEXCTAo421I5eDuGqmPvq4ERJwwXlfKwSYrUoxP
2xIQ41gRlMfB5XqSTF1Tzjocmw3h4B3+j7wljxBwQsnkvhwH5+Ss5V7WJ6DB
vtzqKaee7O+H93q0CTATUDs2y+F3f8MahTJVAhajnl1S4GB+88TCDFkC5MY+
dKpy+gmJW33ohgQB/Z3pEQKcficr73e40zj1XcRDvnD0cSavOm/MQ4Di9PGa
E1cI9P6i8sLZKTbQxTcFFQcRKLVfcf0mJhvCzk3em+PoH2G6ac9INRv2O6TI
iQRw/CmXP5dXyAbro4la3P4cP7bLRfo/Y0POcG9jzUUCbVojU0sKYsOM4brh
QU8CCd/cQHxzYkNo86cQvfMEmp2XEo02YYO6vVSzqyuBKjvXWogrs2GLo8cK
IwcC5RqtCe4QZ4NhhusSNydviZ9WP35MZoMZRXv2LiePLmliA0rtY3Dxyh51
ZMrJ/0pRCrtsDMy12hMsTxBIJ3ylSkHuGLxvGdc/ZkQg6jma9+6oMQia1Ckp
MyBQ5ibKP5PtY9C7acyzV41A8Ym80hIbx+CYV4p+lSqBAqkr9nXRxmApBUgx
mwh0eJh8w5k1Cs9X/XqVwrmPwzkLYsEJo3A0TObIIg+BmjbMb98TNgqp31u9
zv9jo9K4WUtej1GQOXCmOIFgoxif6bQ4g1EIbnT1orawkao2W/X55Ah8OFVb
EJTCRk5brl4t7hqBqNRoabtbbPRYgd5QWzECtbEGiuxgNhJZvfXSzKMRmNV/
Z0SzYqO/fz0/HzAYgczEHAFLUTb6UjxmOnRvGDbMpCb7+o6hxbyQl0shw7A9
JvqUiu0Y0sqkLYi4DkN5u7BR/KEx9DJpS9pOvWEQG5F+4CM1hm4FeQ7FDAzB
V7rBXOTnUWSuNxayVXsImufF7BwXRlC8VsjPfdJDMJ953tekZwRVb6bJmfMP
geK7/vcz5SNo9/ot30O7B2HRrzvL6c4I2rjsIdoQMQh7zh7vHpcdQWN49IVv
6x+IV19rI687jK4ZjP4oDvgNpZG7VxZrDaIvB0eOaTr8Br74pDIVsUFEMhqu
yzH6DcTBo0yXiT8o2HSw5pnsb/i64UOiQc4f5O80UHmrhgVYUlUjfuMf5BLV
hc9Ks2Ai2PQbdcVvdLSmNpda2Q+yCvMl2S/6kfipnDiL1b2Q9UFSMnsDA71V
iC4x5O4FQScLR72f3ej4nHO/GrsHxpV9lYrCu9HNVBkd/ooeiLKOe+490IWW
/txjlPj3gPVAn7BYZidiXQnaItnCBGl5UTsxtQ7keexO4kclBlzXWpKf0mtG
b2e+0SvlOsDOTjkqU64CxWY+/bJ7rh2slsmf1cLLkfuZq37vOHPhfuh+v4X5
DcmV6/x66t8O3QqpufdSytD9hKyMK5VtUBaWYWi9/gsK1Lyjp3G+FaRdT6VY
+ZagvT7W7qn5TZDWw1ZOc36M1ivorhePaoLQVaOSqhNJaKFd/Ge0dRN4Sbrs
mg6/jwr21GtfXtEEzEk+D/EL0ShuOmuQ3d4IpJSKI3Pvw9Ho1d0dO342gvS4
qbfUfCj6H7/nUXI=
          "]], 
         LineBox[CompressedData["
1:eJwVVnk81F8XnrHO2BNZIiKSJJUS0rkk/FpkS6KkTZskWyokJFFIkqSyhRCK
kO1aszPIkixjG/sYa7Z45/3nez/PPed7luc893Pv1kt3TK6yEAgEDebn/2vk
tSN33+9owQQej+GFDV64123lmjahBdtccKLliPvjCGpWvfLnZuz1a03n7+0w
zJWx/S15pQlHHN/NI3s7Fn/6M/Ri1LcBW9y636DrnIs73Td9fL+vAR/U7s6S
NPiB+bboZxj312Ov33pWsuJ52NUmqfkH1ONUSe78pNx8rDd0UyRguRYTaHq8
Br1FeIQ+Fa3oUI0ZjMvbd1wvxRIh0t96tlTjK15qanWlpdhoj3FZaH0VztJ9
T7OXKMO5Tt+GlhWrcFDt9dkvdWX42aKzYu3QT3xgZOuRKekKrMiynHnLqhwb
qMVp3HlTia3jFCukuMqxgiGPk1tfJQ7VtWpryS3D0QqHj9oz4yz7FSxqbirD
nd6znpt/VOFa7kdaPE0lOGNBJ+ZCdTUmfEk3LH5UghMKYocyuGqwqiH1grNy
CT5RxFZIO1aDo0K0vbsCizFPu/Cd1coa3KFICjr7oghfcbahZGfVYnT7RkbJ
WCF+rkb22jhZi5PSa5p3GBTi5gSrspPb6vB91RciyywFWEVw+teZ4Dosflgw
JtLtB+46OVKceqYee3s5lbG05eLkq64vqH71eLz019DNfbnYIEVydTyrHhfo
v1HUpGfj8r1aok95G/B5Y4msP5ezMPX8sc8FGQ14YnZe3aU8E0eU5hpQWxuw
e3gj5pPLxKq3713tX2rAUX+8a7VpX/HB7bxiXocbsZLnOeM/el+xyj3hfPEL
jThf+kC7c2IGThhsYbz0bMRZtc0Vp5rSmLw8sBTKa8S/BPyavEO/4Kp9Qnlb
2hrx7Gn17u+mqXhZqJqNbboR76V+nNvc9hnPVNKm0jZQsLGcKeHUmyTMMDjc
c12Sgh1ucvB4WyTiEVHfoGAFCk6fs5Md6YzHeKrqjYwWBTeoS+/eHBWHf9lc
SgzSo2C6Z4uG4flY7D4vRbM9RcG85X56j7fEYKqVs2rKGQq2EHSOv44/4l6e
fmerCxT8Jqozv0H7PZ76thJ4z5aC2+S1W1TLI3H/sys263YULPQ1cSxSLwLb
51A6Zxwp2FSTj4VY/Rp7RrHTjN0oOLTCWeza8VfYSKrTXsKDgimn/qjU14fg
E/QDV0weU/CWLJ8Q2+jnuCp/U86sLwW/qzLCez89xfqOfpYEfwoW7Zakr332
xrSLn464BVDwzoFW9fDzD7Gi7acbVs8pWJ7H4Y3ytbu4ha224vMLCvPcKfza
XHYeGzy5bXo5iIKV+Ltvsu/ShVnCX35/Jm6b9v4osHgdNOwGl0WYmHFq+8wd
R1fQi6gQ3sj8/+ErvZpbql4Qtkvryv1ACl7zvP/u4+4noPuRMHHsGTP+zVS7
FsUAUBLpyHrqR8Gs5r1anPLB8MXyQ9VuHwouk3729L1AKPyXhPYdeUTBvuEy
DmpBYUAOKmIpfUDBejwFFk3cbyAid4d+qgsFc3qf1r717C3sz/8kyOJAwVV/
6TvYOaPAjHLtftkNCg647S/40fcDyL/Kfsm4RMEJ0yEeEo+jIe/rqNMzKwq+
dk3RNnstFoyE0onrxyjYQOaepY9WPNjO6Iz80aZghe4yQyP3T+AZWsgnd5CC
x0zOq40tJYJwzcakVRkKruFN3plz8DNUUW/YBopQcErVgpTvvWS4lRG54sdN
wXaHQ0hb5lMhd79iRsBAIz651LU6ti8NDI76LAhUNWLlrB3TOY7poLokbumY
0ogXw/omFBYz4Od3H+Eq+0b8g+tha6lLJqg4JfrXDjfg6F3CLekyWVDucq2d
r7gB+xmlU6Ias2Dx/GLlv/AGbBY+UOu6Ixvy8oeO9qEGzNh6olSxOxck6oam
mn3rcbsuDYsE/IAGxTmbpyb1uOiaVyGbWh6oRjQ4Tm6px4FfsnJ7QvLB+ej+
vqbMOiyvLpkeqlsE2Yl4TqihFvOcy0l9NF0EbU3vjO+8rMWznsbJdh8wkHTt
v3ib1mKb/lITWfdiEKXk3utoqcHKCn9P/mstga57W8WtK6pxdeYF3a/PykE3
5Dtbk10lPlShVLadWg6rY4wWJFGJM9qWtD8cqAA/hs0595qfOHzpFQQOVECA
xH+rVrI/8RWo0riqVQlerR//G/xZjtdrVPaITVdDgCJp+EJbCXbs+pcerF8D
B6NTNdScSjBtskaZ40MNjORyCM7wleA6gatKs8dqITa4iSZ6pBhHmr/dXh9f
B1X8Is1Zhwrx/n7ilscWjWBWyOJ+SzcbK+edmVb53AhzX662Fd76juVDv5RT
lxpBoOTuBpOXWZg7JnV/9EkKuFXxfz3R/g2vGll0rdMpULyQYVX5Pg13Z6Tv
wHuaIUOWENtW+BF/dLAu18r5BZSwaOm+nx9BlpG/pFH6G1yiP6UFfq8A9/oj
vnOTv+HBQny3jMVPaEuu5UsT64QyuWnfPSs/IeDqH9mtdzshYnDhQLJOFTA6
l09ySv+B5nm30Py2GiiqUI9t8egC/PN1hguJApbvco7ZqffC6/bN7rXnWuG/
uN/1hhb98JzfPP06HxUYT9JsK273Qzd940fJg1SIuO6zrunTD0b7DDpLL1Jh
ZNeuPTvS+iHxwSnXP1lU8M/1CmNlGwDLpwsKey37oKp+u1Vu+gA0U7u9uqP7
QX/RZWQr5xA4lk3t9BQbAnrnsccREkMg7fhgng5DEF4oJc6/dwiSDsVWa9gO
Ac27+vjquSE4ITvIefHbEPjxSqa3MdfO38pqbQY0+ClT7hJoTQO9C8fVOm4P
w9GTgqzz34fBp8rIhy1sFIIukqeXqofBoCXK9963UehwIfSudQ+Dq/qBth+U
Ubj5gZ5H4hgBwSnFT8k8YxA0VeMoYT4C5m83Zqp4j0HHS5/+IwsjsBDW3WR/
eRy2JjygGHCNgrSQl2yc5zjczLtbdHLLKEzpbiNEvx2H1f4LkWf0mHm9ZEqn
G5j+qodMboWPQtLi4vWxAxNws22uJPTAGFxlPVDduTIBmWPj6W+OjYEgI//p
jY2TsLrW/z7KegwWdhRX5ylOQtD2pvsJfmMgNW7nGGcxCZluX/bktY0Byy6t
Ap+vTH9x25g+13HI3TileOAMHY7uPh9MCxiHPPO6mfKbdAg6YuYx/mEcljpy
yRs86bDVTufs/M9xKPvPZKE3jg56hVs2kEUmYMsg5BpN0CH4QruXSs4EJMlw
GCGHKfCbOAS0uglQ8UyQrvaaAs/7sf/e9U+AoGLyrbWQKbB/dfsBJ98kHD/V
p3k7YwoMK1mde65MgnvmWJTp+BTomd3YG/ZgEoiBuvwHl6bgcF8D47+QSRD5
d8fyMisDlFfe3v6ePwmMN6uVDgIM4Nutcu25IB3qpKP0fBQYwFHwWk5HgQ5j
KZRacWUGrBmsDPzVosMGuxhHv30MoF/6aXP5Bh3s5bWyf2sxgDa1U0rsER0Y
+paSJToM6HF/2d0QRocjDbka7voMaAg/Z6lRTIfX/BGqt40Y8FO2VJTRSofe
K9x9sWYMKMrY3v5pnA5PJBMGUiwYkFYzY7pBZApuGrO8UrNhQMIZC8FKpSkY
dLssnHeZAR8GCynuOlOQwaf0lv8aA4LW/E+O3J6C+jFei323GeAXSOf+4DMF
oiKP7IkODPAUNasxfcvkVZSkFevIANdPP/zJ6VMQPCGdKezCAPu9Uvq4fAo6
hJeLre4xwBb7srt0TgH0up9xvs8A6xNjZYqMKZh4d/z6hYcMSJnYrs1gYe4P
lgxJeDBge6aldC0vA7wpc6WpngyIu/9i/ZMoA6qVM2f5vBgghYp7vGQZoJ37
xO7IYwa845gttGLymqSdLnPMmwEi9XLvD6gzwHdUiUfWhwGvXlm4b9BlgPqR
bKkGJua3DLSaMGSAxKNCs+O+DAiULtKoPMsAr+A7cZFMzDnMEIu9woCKY1ls
BUzs80V2yf0OA2wClB3TmXjdybzjzAMGdOkdojkz8UONZzl7nzDnlLFgxcPE
fwkF4bwhzPj6extdmPmcKukuI5EMODHqeegrs76pF1tPl31i2ke2xxQx679l
Zqb6IYMBQoKqK++Z/Q2LP914P58BLoVX/zv1iAGX+37MmP5kgFijRmAzk5/e
xIkm5SYG6BRNFG93Z4CVvdRXchczzmuHcUNmXe2qJiGDNKYOGa48Bm4MMF3x
vYOnGXBp/pb8RlcGNJbkGEauMvMZ3TuU4cSASkNJXiPBaShbFr1tY8/cV+7b
5CgxDZncpIaEW8y+eT9Jh8lPw693/+QrrjNguVZJtUNjGvIU77c/u8QAvRSG
1rLuNChlRWuqXGDyHZClL3FqGuQSN3xNs2KA0n+HrGwuT8Oc/s6pfUx9uikQ
rnrfnoZNvwaqNJj6reAst4+/Nw2XjrO3iZ1g6uDnce+RwGko0s/+ZnOEASFH
rD47ZE2DZYJgmqAKk3cZqczQomlY3ex6pkuRATtYBgqyqqbBt/FvqKccA0qL
b1IWu6Zhd5LE8glxBsxrPfjrxT4DnWM0zY1MnelIHibG8c8ASa30mN7fKQha
JXJXiM0AJ4/1UdGxKVDIf7aFrDwDI52d+i0NU2B58O3Rl+Yz8M3dpPNz2BQk
iJw/lWkzA7OCFpoXnkzB7IL02dabM8C3EMhT5TIFz78n2Yk9moEWTq7crNNT
gPfmvopJnAFr9asP1jdMwbZd7X1fF2cguSzrtL87HRx43o23sMxCn2Gb3/Pr
dCgct56f55mFmhXso29GB/NkGklj6yy88Bn+069IB//tC7tL/5sFjbRR8exf
kzC5VdizOXIWJPbElHNtnoSDD2PulsTPwlPfGC4R1knw/rXrakbaLJx299zR
NzYBm57qnQgqnQXLA3fEMn5MwOGJe+LHxmYh6oofSdtsAoKzO7NL1Odg9+DA
DmePcdhzPHoqo2MOqB7w2Cl2FNzjlQY+9s9B7gbCpk7vUfj5L7ctaGIO6nxV
LciXR8Eyo6nQjjAPfAmazmUyo+AtzPpcQWEeSjZrb/n6cQRaeq8qRN+bBy5U
saM+eBhcnHdeDN60ADoC6pysJ4ZgE9dUgfnWBWjWtDLcJDsEuR+/iW5RWoCU
Y7+/LS4NwmqNOiVVewHoD8I1dyUOgvdWA6ixWwBj/dDjtusDENRwRZK9bAE8
Xmb9iE3shwSFD78f3PkLWxDD1SmnF9q7BExsqxZhrfnaH++pFjgWeLXDuXkR
jlNst/W9boEC9Txrn65FiN/8MVr1UAtEh1++Fc1YhDah8jrs3wzXjbJ9O0WX
IPbw1O6nW5tgucwqx/DGEnBEgnXupzqQSEmQUONahuKhcmR5vwSCzq7EHhVa
hrvbciY7KouBQDLaYbZlGawevLgfuKkYBq8s7b+7dxkU1bIeK94ohC9bTpxK
sVwG/813a+dpOXA4dPqxVMoyRFv764stfwab+4eGOU+sQLTwcV2Xd9FY8UpV
K918BaSPGV8+aB+HZw3NylsvrgBloswo/3AC9ttmFxN3j4nTE4NbO1JwauM7
K4hbgQ7fKH1Rt0y8JLfS6Lq8AqoyHDxyxkU4tPlH7lDSKvjvTju106kanys8
mliXuQrUqoUNHQI1WC6p6XVm0SooXVeXjv9Sg3M9Rh0f/1oF9a+htJDBWtyj
ILZLkvAPetOVTnvoN2DFR24xZmf+gSHflFjHnSZctlMtoIx9DURZBQsvf2rF
1rvN4qb514Bc+CxmvrcVL+69WyAlvgapb9/Vk8TbsJJGCv2h8hokm0iKZDxv
w2EGUqaqZ9Zg8uK+YPqtdmx7lVPiU9IaWK2NSYVu+I0JN7btb/m2BuFu6TeG
jvzGkXbahsTCNfiYuudQustv3OD00Ot80xp49x3ni2//jdW8pwaFl9cggq20
g/i6E5M+tn/xO74OAd2LmwXm/+DY2LmfWafXQeFHsfbTLV34UMIGav+FdaAM
dsrY6Xdhhy/HBcF5HRK2Nit6vOnCv/Ox69+odVC8TTNKV+nGzrgrWC5xHeYD
JrSfnu7GfGVLSaZf14H1/vYT1fe7sU7Nvj/pFeug9EyRNaC4Gyd3JMJ1+jpE
JG5vmdHrwUe7yi3CF9eh7XKducC1HsyYYhy8RCSgw9qk32F+PThgltckhJuA
Dp6qd24q68FFy/q+E1IE1F7zs4xfrRcHureFsMoREK+z3rCVSS+2WLvyXlyR
gByeLrnx3O7FM0TvbANVAvIdNql6G92L5ckFI/EGBOTq3NCtTKDimUrlm7En
CaiogPpwJzcVF/nFjH80IaBYt2TrLmEqNmd7So88R0A1A8+eWypSsUzZ0p2I
iwRkFqCbuF2ViumP7aZf2xIQRYWYkKRFxU/WjedCHAhIvkt6ueIUFRsVlbsE
uRBQuOSN7ZcsqFjCQ+1v4AMC4jnrOfLVhoqzliWW/XwJyF3qUN8tByr2+hH8
0PcZASlpCC613qPiE24s/x4HEdC2ZoGrs55UPDg/vO4eQUAq7ifZDZ5TcUaW
5eMH7wmoNo1T5lEoFbs71bO4xRLQY1r/5RsRVGywF/m6JBLQn/HsEo4PVCw0
/Y3dKZWAONls952Jo2JqutxTh6/M/JzdXy2TqDjVPoJkn01Ay84b1TZ8oeIj
Ex7cN4oJqE+6WefNdyrmS2E8t60gIJLQo1LbH1TceeMy35UaApIdVtUcLaDi
BIW24IuNBOQ3L526pZiKHYcNNlz4RUAStg+FOcuo+HBCfui53wRE3fbULbaC
irmuKgtZ9hDQ546X7YxKKm6TjXl9ZoCATFpn989UU3Fs/0aR0yMEpMElEJFQ
S8X2MX4RJpNMPiZNWfnqqVjDZknMaIaAbl9U81RooGIOKbt3J/8SUNS7QwIL
TNzc3SNxfJUZj8gocW2k4g9Rxh8MiEQUyT4SlczEN63KpfQ4iOgZsSLlJRMf
EFeLOcJNRAbkPcs7mZj4+7OMtgARORb2ht1nxqt7IxF/WJiI2kSDnj1g5o8w
D5Y7JE5E7zVYhpXrqPiKMEuiuhQRlSlxF4bXULHKL2cFtW1EtJDgJfGtiopX
Q4c/q+4gosF6HZHHP6m4ythy515lImqlqxezllNxmEB96u59RJSrZr5To4SK
bRpBeddBIgq6FXx7WxEVKwV9S1fUIqLDrwajSvOoePGE3B4FHSKqT7aiCOVQ
cTl3xDc5fSJiO06U3pxJxcE1XKqyJ4jI/tRIfGsaFVs+8/gubcys323Hfd1k
KpY3YBzYYk5EO3gGcq59Yuq/olVdzIZZX64xrTaSigN8DfI3XSUiXzOrDbyv
mefhSP4hoZtEpOPzRJI1mKn/4mjgdyYiHk1eKz5vKpYsuHWU3Z+IFO/uVvl0
hak3seVl+xdM3McV2mNFxTyu/hkdoUTkwJI6VGzC5GP3p82p74lI3jN9z2Ng
6imuZ9okk4gk9+ecXhBizo9wO7Egl4jKb3Dv9yBTcfX5lXPyRUTUMQ8vz6/0
4lwR0aqlKiIyv3GAX76mF4cHGn+I7iGizm8cmxsu9OKgkV5TrkEiapDgPff6
SC9+ctSe7DxKRIuPbqhly/di5/UAZ/05Itrdd5fEOd6DTZzKj9HJLOhJpPr3
+Vs9mM9K7a/mfhYkOBxZGHaqG3PkVqR+0mBBwiqbW2BHN/4nZHaJH7EghUHc
acjSjScaHOr7j7GgzjCPtHffunCNTnLcMxsWlNPs4cjO04WfKkoatQeyoIcG
G6KrYzux59MUdu2XLOi6/OlcAadO7Dqonp8czoImmueCq3Q6se0Hc3nPGBYU
6pRDDKL+xrqCIavbclgQ29NfXM+EmffBMstnx34WtFbEmclv245tBn7PPhpm
QS/yRsVf72nHxXUZh19MsKC63fWVyatt2Ouj9a/EBRZUfVZJI+BlG17XzVvv
4mJFNd+Odahkt+K14Lvm+vtYEdlQxqNrvAWvylFZJXxZUZbRNqUZPgr+a1xo
XSHHhvruXRVaTSrE3r/Tuw/vZEPnAp0vcNoVYL6LsedyVdgQ3ewtQ1E5H8s7
PLVM0WRDT1hdVJrSc7FZkLH5S2M2NEnczzjwORNn1AydPO/BhvrfD19Mn4nF
N47wac3/YkPTQ1c9t4QmwB/VC5vlfNlR/Pff/TIBNWC7tJ//yTN2FJXV2sKq
VAuMQh7WoSB2tD/7u2xcfS2w6eeNxb9lR0YUBVlBgXpQPiucty2dHbV66RXZ
vmwEL49ai22d7CiL5+x6rXYzyP9UC5dV4UAB4j9ZGeR2yAjgC/DZz4FEnnva
apq1g8apIY8BDQ6UGxT2/tCHdjjVEXo17igHcuO0iLfa0wFuY5OqslYc6Bg9
SnLM9DfU8sW3yPhxoORnAT5az/6AwxmBDTJdHMhaxWPua2ovXEraHSnXx4G2
meU6o+FeOL1kKLuDxoE4ZdTscwSooPHuxX4VBgeS49PlMDtGBfZeLsvDbJxo
qu2ok0Y+FSJt2eMslThRf8hGr0uv+uB5zjYl6z2cqNP0q7Pblz54RNL9fvEA
J9otp8thUdkHV5K9K68jThSqqfzEcbkPdtPXx13NONG2ttFiLut+KHdZVn3l
zoke/Ak1ui8+ANk/xYrCH3Oi6LYQ0zWVAfgsoq4f6ceJftpHXtXXZ74/f9w7
GxPCiaw0sMM2pwE4+2/OIz2eE+WMxt8gVg0A3XfqZ20dJ5IfECWw2Q5CXyuf
UWMTJ9K5pfTyk9sg/JJX/t3cxok+Da8+4ggchB9VduO/qZzI5IrpTfb0QfDl
GeMfmeNEtU4phozZQRALG7RgkyShb42BZ3TvDsFBH6lNzjIktBfcAme9hsDc
0bJlYDsJORzce8okZAhCjSgny/aSEFt9jKdk2hDw8BboeBuQUJh70+uBoSFQ
XF1Ynz5JQu5ym86QZofAYHxP4UVTEtos01fQuT4ET6oT1bStSehszZvIp6I0
WHvySongTEKJVXcnVo7SQMKlYfTOfRLK95Dd5G9EA80r5MReTxKie9caF1vS
wE3n0Vb8jIRSFe2MVO1pEL4nr0c5mITk2RPwnXs0yJKef/chjIRq/p19a+5F
g+m1m5s8P5LQw1On5+Re0kCA/qllMp6EbAXQLr63NFDupoacTyahr5MTEBNN
g5v55txa30nImPzybmUaDfyTX1al5pGQUWW0qeV3GiS+rXsiUUxCXz7Gv36T
T4PBezqE1Rqm/cqLRoFKGrBc8yi8RSGh+Cb+8BN1NJA2z33wp5WEBneUnt3b
RIPDR2fVjv8hoYOCIeylrTQ4r6o8n0clIbfq9icrv2ngLnvjmyKNhPQe3Kzq
6aZBpGD8nchxEuJ/+rzgVh8Ncom9SlzTJMRBmTeJHaRBG0Ns7P4CCf2bafLw
HqbBXK9Z4ugKCcGTYhWeMRpsbAy+cpZIRrr6rTYwQYO9RTVbqznI6JJJBJsE
nQZGX9h7D/IwMeIQip2igX0UikraQEaLJ0L8mxg0eB748KyoCBlp3JU4nzxN
g+QH2Zv8Jcho3I09SGmGBtU3plv+biWjHxs2i1kw8YiF0str28no6q+Yf/+3
cxhcM2xXIqMWfdNDKcz/t6nFcuvvJSNiz/n2ZmZ8Hfnuqmw1Mhodu9Icx8xv
IyzqJ69FRidfe+3dwqzvEZvpkXAdMrpeorWmzaz/w+wLAocBGQXNv9fiZ/ZX
0F9V6HKSjL4dFFl+wuy/s4n14ZAJGXWPvTqcwORnsfjwwdMWZPTkjaOIA5O/
TRn358vPk1FXyZPQASa/+z9mfVO9TEbsKRsxoZMGZkFTd+Kvk9EhwbYvlcz5
OHoo7hKyZ9ZHX3I4yJxfmlV04qwbGYntsSgXYc5btV12mcOTjG7/t6thuIQG
+SaJJ8R9yMhdw5LzdgENqv5Lm0YvyOhoMp/VmwwanKrYo2sWSkYZDqsxh5KZ
80Pfw6+9IaOb/3jvvomjwYBagWZQDBkdtrnNY/+aqcdMCIpJIKPWTd28Yy9o
wFAuo2alkJHsq0yihB/z/MjVPPnznYyGKHUHYl1oICrU0ahQw4yn2mqoaczk
K9hK5lAjGe3LYTG7qU8DOe5e51O/yGjWSdLMSIupBxaamGsPGcW31XZrK9Dg
JGP2ctkMGanfjXmEl4fg16172W1/ychK+1hhMn0ILIeXSWOrZHTkwqSOYf8Q
XO8hpglwciHnvyXUoqoh8K7jXzy/mQs1mCTkHw8dApLBq2N3pbnQo2nst+Yz
BMFlm977ynEhbzioeMtlCKLyJHVSdnMhnfcKbY5nhiAnaefzxSNcyNr53Zq2
6BBM+OpLv7LjQkY/e6qFXgyCE6HWMeEuFzIQEV/2ejAIyw8NK364cqGjwmHD
ydcGgdPp9E2qFxdapalvUtceBJmLl7N2veZCnF6KBXrTA3BG65FBVSEXWvwQ
JX7z6AB0zdP4S0u5kPhNwff6uwfgUpphe34lF8KVipJjogNgJ7XFNr2JC2la
g+Wj8X7wJhb6hA9xoeAytebZF/2QVrFcdIWXG+UHp2SfquoDNkPX/cTz3Gj+
1co1M2EqBHD0rC5f5EYf0nbBCqMX+PHR8jlbblSzojlMz+4FcRVh0xEHbhSY
GLSzULsXdgtmOTT6ciPZ0DstPKY9YNk2nfI+lRspvH1oqna1C75a35bRWOVG
Jx7wdtBPdsCl7wzJaCIP2vDs3ANjtg4Q4nEW4+DkQXNvps/a5rWD648HAs0b
eJDEP+uSFDnmfSvkv3ZjOw8yR+U8VYutUMp8JL014UGV7v/dvxjaAr9UO0KX
kpj+Fm2bjQ/WwyLXEdYfp3mRmuEp+sHTX0GQzhdWasmLnAxECr2lM2BnU+e2
ugu8qL/oOp3S/gWs3zjq9d7gRS9g7N0+js9QJhv7jN2TF507Q7Q93vABujjs
xfl9eFEHD7f1OCESFkbVU0T9eZG8/4/+QNXXoJDRVLczlBcl2V/L3HX4KYiv
KA3MhfMiAZVSYeeT7mDleoN+OIoXRd/I6B5ysoETJeVspBheZKOw1bqv9TLm
YDd9tDGRFzmkinbaXvPCSVL10VYpvMh/9IvQDi9/XMLyds/VDKY966wwjfgS
z1WpmLrl8aIIhXuiwV6R2PK0TfiHBl4kE9KfTsxKwHL2WGJ8gRdNuPfD38ws
fNg48MvcCi8iPn5p6NL1HVuonjm8RuBDPefSBQ3YcnDAMv3CBm4+tFi/80Cn
8Q/M8NsSpybFh5I/Hak8MFiICz567PDV50MzVTRBtrtl2KRJ84BkBB/iSky8
tkuwDnNpcpcUvOdDDmHpETyJdbgkvvP4uTg+FOAy3aKkWY9V3O5ffJfGh9wC
Js3lLjZgPqmc52IVfOiSzEz/L2MKrrbbOyA8w4c2HmGLNPFqxl5tRPvvf/lQ
NaxOby9vxgdR06LZP6b/NkNHf84WnLDRgS+MxI/WLexah563YN+8L+qCUvyo
fCL+L/3lL4xIO0L4TvAjRTKBrODbhhfvLoqnGfMjm8y73puL23D6n8pPJ8/w
o+jYmny/lTa8Jd02/znzxT71kNSHHdrx6ul4Gtd9fhTQ4B/13qwD58RJaXEm
8KOfnKZTG4md2J53qjIhhR8lTS7Ure/rxPL3ikz0vvIje5O8kya2nTjs2Pnr
Twr4kdCti/9tr+7EjtORr1hb+BH39Y17XZ/+wYpWN7fEdfCjtOueUu7f/+C+
cvXPOj38yHL11aa+/j/YKKKj6PEoP/ISNvIv1+zCJJak/7ZO8SNp/m1a2te6
ML5171fxHD8ae8HuIBbahV1b9S7YLPMjz20sR08UdGFl2DS2vs6PCt/+7e8Y
6sL/Az6P54M=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13229#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4, 4}, {-0.9999995520684569, 1.032405954994006}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         SuperscriptBox["x", "2"], ")"}], "fourierSeries3"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707083287315578*^9, 3.707083312223772*^9}, {
   3.707083961654685*^9, 3.707083971120451*^9}, 3.707084042233411*^9, 
   3.707084116872308*^9, 3.707244540998392*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"92a55b26-7963-48be-b382-52d77d46e796"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical Exploration", "Subsection",
 CellChangeTimes->{{3.7070809670284557`*^9, 3.707080970804514*^9}, {
  3.707084459539116*^9, 3.707084460602927*^9}, {3.7070853130222063`*^9, 
  3.7070853173661327`*^9}, {3.7070890824895277`*^9, 3.7070890878576508`*^9}, {
  3.7070898214234447`*^9, 3.707089822583433*^9}, {3.7070899270617027`*^9, 
  3.7070899301583138`*^9}},ExpressionUUID->"e43779c2-7d3e-4b2d-b57c-\
39178d0ee555"],

Cell["\<\
While we can see that the functions do not overlap exactly, we will explore \
the convergence of the series.\
\>", "Text",
 CellChangeTimes->{{3.707084144367381*^9, 
  3.707084215830502*^9}},ExpressionUUID->"edb0281a-7723-4809-a510-\
0eddd2913bb4"],

Cell["Create the 1st order Fourier Series approximation:", "Direction",
 CellChangeTimes->{{3.707084347214493*^9, 3.707084353813814*^9}, 
   3.707084434515164*^9},ExpressionUUID->"83beadd2-1ea4-496d-8839-\
cfdfe1400e34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourierSeries1", "=", 
   RowBox[{"N", "[", 
    RowBox[{"FourierSeries", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "1"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7070843561031*^9, 3.707084367449272*^9}, 
   3.707088885457704*^9, {3.7072445704501553`*^9, 3.707244570805676*^9}, {
   3.707244653091816*^9, 3.707244654789226*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ee5dc726-36cd-481f-9ad3-fb91dbd48d32"],

Cell["and plot:", "Direction",
 CellChangeTimes->{{3.7070844309330177`*^9, 
  3.7070844329073343`*^9}},ExpressionUUID->"74c53f83-062d-478c-85b1-\
8fead42f949c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", "fourierSeries1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7070842452274923`*^9, 3.7070842841343946`*^9}, {
   3.707084366363307*^9, 3.707084372425469*^9}, 3.707244574229636*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"195db6c9-f0d1-4b2d-ae2c-f2da9a93cff5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rozea0eSMKb08lvwNTq6ezFj3f0pEp4W1peGWNPRx/5fF47NkLDbUJj2yYSO
Ctp/+6cx+BJ32awPPUVH++5f5qxfIOGcQ5ziVzU6UkllU2f4CZhfmjKPOERH
HkcfJexcIeHtM5UH3/bSkVS97S+9VRL2b/aOiN5NR0XKhZ2yDJ6tiCwtjtlK
R5p39P1zGPqK/LqxOAE68prTOLzM0KzYTCCRSkfy7Zcsxhk6TDdMIXl5Gl0R
o9gGMPSRf4NmqVPTyGt0oKyfsX7zlX3304emUWaVHZXG2P/OrMvXjI5ppC9+
6mXM/3n5cW5hVv00um7T2ijEiDd+HXUku2wa3XQpNT/CyOd4qC7fbzyNNKXV
Xgsy8u2XeSePMqYR8a516iudcf6e32hDcdOoUSpFI4rB1w5/f8Su/zqNzoyp
ZRnSSEgTLbI7EjSNdsVQhmNHGPW43Shm5zeNwqR7HOMHGPHmD3S88ppGpvym
U2Y9jP4UnAv56TyNUuNOsqa0M84/c/MGXutpVOf9xdiujgQ9Dsm/isbTaJsX
paagklHPs4f8rHWmkWNFr0kNg8+3L5uxpCtMo676m6uz2Yx+1L2K2qWm0ft6
Yat16SREfXG7x75jGp0X0jreFs+o/7GQaXPOafRrh9dBn88kOAfGJj1enULw
ZMHdjsHv2b3Z1xOnp9CTI5nlCy8Y/efzr5fSMYWGJW4LHrlHgkm5cP331CkU
pPBnmmDwe4iwbEBt9BSqtX2hVn6ChE571VPLn6ZQavVyHC8wzlPAskDPdwpl
xNLMfkuScM84NH3WYgqNkpr9LfOM+yMq6Zao/hRK/pVSqzhGA9Z5JKOjNYWc
bTZPnOmkgX9IV+Tn/VMouspDExUw7ovOne802KaQ6/jczqAXNCi6GukcmDiJ
1Lofe2cz7ivuX+lyORGTaCRY7r4iE+O+4ikc7w+eREYfNQrdyHFoSey/pPxo
EuVsupdrVjkOY9MSJl2mk4gvYF3FM59xWOcZo7iXMomsRPQ41ckx8MmQLBGY
m0C3D+vNVbeNwSIt+uz02AQyDZ4SUCwbgx6rKI+s5glUufVhrm/kGKQei/ij
ljyBemOr00xMx8CA7fNpU6sJ1O797ip/xijs2bKzkukeiQ5GttWpWIyAjCIp
8216DJ274rLgfn4QHmmMV/+8O4hq52we5V/qgj/Hx/QUbBi+5zjhGqfTBUy6
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
BDyFjMoMGZydlnRVdtpjBBzkd2gjBjc/LDyaXhM/AnvSzEXLeScAr6SmcHCP
AvvgxJZw2wm4m7af3olHofj0dt4z6ychcJTTU4wRl+De7k2OwpOgUJl5XEZ0
HKx5v4m+lZiEpj9CGtzy47BYLqPQrDIJfi2+FVrG4yBz4oiFtc0kRIZ5r4v6
MA4B6hYxt9InocZiientFhq0ie1IC8ydhMofXES6JA2kmHtz0ksmgVoj8fqr
Eg3+4GvV822TMOQcbt5tRIMZVfc5L7Yp4Cfltg4y+MX80AfN1yZT0Jdz5dL7
KRpEbT6vl2Y9BUHF2QU6qzSYnhU923BtCmTlksf/cJLw4sf3G1seTIFjn83T
tR0kIPmsN1+jpwAFlhp9ZPAXz3qPz/kpU6CcqeBsZ0iC2SRE9/+agmT1FKWp
cyRMJRVnS1VPwbZU6YATNxl8L9vUnTI/BfMK29YPB5Bwi+fjaB3zNIQ2vS6M
DSbh96jlzAzPNHSOVMxLhjH4L3aAQ2XnNFjJ61WbJZIQ/ix2/bn/psFieNqe
8wcJ5BUHYc+D06CVLOJ55xcJT/fM7vtzYhraJw+MujJ4tZ6ardxnOA25GUbq
/Aye3TlwX51qOQ2mcw6sVrUMni48pit5ZRqWayvi7ZoYPBrJZqrjOA0/Y1h/
ibeRwP641PqGxzTg8OWEj10kGNm8vObvMw2OKjTWkj4Sxndu9KwNmYbAa+bt
x8ZIOHTv6+28yGn4XJjn6kmS4F0veyk5cRr2UZqvO06RUCGbbRaaNQ0GfGxq
22dI2OSrdcr/DyO+mXWPPOf+/391LdyvmAZekMl6t8DoU2WrAzcap8HFcvja
xSUS6IGjEhZd0yAmpSPet0zC0THXrToj07Cil3t76yojf01WPmU6Y373nn+s
ayTUfgmgSK5Ow9G/HWPhDC08LzyziYMO4V7p8nSGttOPGWJbT4cNNnOH5hk6
OfZgG30bHZR8XV4kMvQiy5+/veJ06Dz2JPv/7wNonD+dX7uPDkl1q2f2M/Z7
ldGakadMB87NOh2LjHha+S/HJqvTQVnh/KQzI97dV6c/h+rSocwib8tXRj4O
fx689jelA6tv0OA9Rr5Z23ie3L9Ah2dH34+yMerB7Bx898Z1OqzYCWceZdTr
VNXuGxbOdEjdsLNNnFHPoD0pVjoP6GBkpTWePUpCl5eqofIzOrjrNN1fGSRB
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
Ok3A/cRNVTnKQnynyzrh/CQBUfsiqO7qQZxdNVX2J8mGxT1KkQ5jAqzh7xB0
RJINPZnzJJaXCHDhpmoTS2k2FAzs8/kcIMCVj++2Ga9gg8pv2/M0RAT4S/CW
qY2abIislylVFPDxEf348vXabHi/wKZzTiIfd0+JB69BbOAv7B4bMudjoWuT
tKwRGzQTp60VC/qx6F4fTRFbNmxe7m+6x6kPXxdrn5myZ4P8sVcbD5B9mIt3
Vo46saHD7F1R1NNeLKu+yKzPgw3KSmHfW8d78AbJZx4fA9ngsTrQaos7Dx9u
HMp4kMmG8KtLfJK43/DXcCuvmFw2yJYpfTJ80IkdDcu1o16wYaVeVW/k2k7s
URD5NvAlG9ok6jXUt33FQfc29Lo2sGGPmongt9w2nHvkr5XaM2y4FnazLTe3
ATs8/y4fL8KBdPkfoW9u1GMpjreMmDgHpJTo5mHPT9in8Oz8Tws4YEJ6BXSp
1GJtqWuzJ5Q40PVzeLhx4Wtc8Tax5a4pB1hg8Y/CnXjcoNF8YzKVA1Fekjst
h2vRlRDrcLtsDiRryvmScp/Qpm/twVV5HFCXK75nuqMe3YngXYgq44CVbKCn
XORnZMsfdl/bwAH9fh2nuAUtqCeONLb6xYEgKvODjGknihmLNMCiJOjW8wpG
GzrRLhMp/dUECbxplYu6h76h9ClZrSEpEtI3moS3m3Whk+bKSsEqJGzLqlgj
ps1DE8T2eYXmJCz2/Jog/7gPSQqpWxWHSVDlB9abifajdXUtijV2JDRFF2Vc
tutHR2JOGXScICG4OiUni8tHvme3NfW5k7Dz3MP+23/yUaQt4TzsRYLGqb/7
LPL56NWqxODf/Jn3/WqieocGUJuYuyz3MnP/7q+TVokDaKxfK2PJNSbedhJU
BANI+UldzbobJPQWlQQ1+QlQuK7IfNMUEua77myMPT2IUhXex1tnkBChF+2c
mz2Iyufe/d3xCQkjI3VzjHiDaPSNuplfEQlr5UwyenYLEZU503URk7D0V6hn
5xkhUop44x1SScKj45qPDVOE6LD50dsPP5Dgn7iJrT8uRN5b1iul1pMws74p
umYpw59LJ/Jzm0l4a1dtlLOVRimzr3YV/0vCqNfODp4NjV52Rnyp/EZCQlqn
gdsZGn2ptHb50EsCZ6dO+rabNBp+rDTdJCDh7NZQN6t0GnFCRkI6h0jYf1V/
XWEZjVa7Y7mBMWaeXVFlh2tptO1ASNboNAkly0S0dRh+ttSw2DY7h4IfacMC
iwEaeUqv+iguRsEOP+Vj2aM0uj4ltFvApoDL2e6oO02j5H+LvsvOp2B/nM7k
r1kalb4Muqi4iIIY0y8O4wwfNyaZSqrJUhC3d4XiCib+PWhZ0mYFClory3+e
m6QR4cL/Q0+RgtvFvrQYw8erTF5U7l5LQd6Nk1vKe2mkq37J/KAaBaZq8Rbp
LQwvL9zbY/sHBej5ck5FNY08xmR8j2+hYHOdn7kEw8PBX3jinlspuG834HU+
keH1ktw7Z/UpOHqxuG/FdRqVxJ1fG2hIQdukq8+YO1PfJaOisD0UyNZMLJ/Z
TyPacZFxzAEK2sXYahrqNJIw6myNP0SB4pM1q+M5NFq5Psst3ZoC+/JPH/V6
hEiHe+Zn3lEKJNcUay0tFaKDwzvCSx0pcM6ueaIWJURXC9pyak9S8GdzhxH1
uxDFx6ZCizeT3/OR2deZQVTk713XdYaZd5ey9kTVIBLs4IyMXaagL6vKUGL/
IDKt09kkf4eC0JItkct2CBChwy4veUABr+TekpahAVSe3GJsk0TBTHyyk+39
AaTud8Y+NpuptyD379ZePqIU8kNlqph8+qHPMq360T/XgqQLqymIlReW3xP2
ofPD5omWtRToeLC4sRf6kKBqND+mlYJTh8WHZmN70Vu3jV2LhinIahG3ic/l
oQuNIu7Px5n++Jl6Luo8tAXqJg7+pKCYWzs3LbMbpSz0oG5JcEGlff/a0gdd
KLAoS0tSgQviZTfsW491IpBYG0nt4cJr8tiKrKVf0ITnhGz2AS6Mp7J0LRqb
UE7r60cmFlwofjqRNRrWiJblOBWHOnDBNrw6M260Hs2YJ/cQZ7ggaswz/mz4
HuUnKWwVT+HCuWDyYZRLFnIn6dcpGVwwvrwrcIdJIlrjW2ZqkMuFqvXKDnI5
oejWblvnKyVcqBYzk6rSfYhPDd27Oa+eC5HqebuLGkqxirXLsqRmLqh6ZulE
PynHnZVaafrtXBARt49efroS77/TXHaxnwubNT+srBt/iyXmphqtoLnQnSi6
y+B5Dcauvg0vR7lwXKMwLfvkR+zz2cDu6BQXcvoWqFktrMP/2ycG/98n9h/1
4DBf
          "]]}, Annotation[#, "Charting`Private`Tag$30462#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1mnk0VP//+Ms2GwZFm4pEkizZkvR8KVKKJKQSaVNI8rYVIdEiJErIloS6
Y2Ys2bm3EEn2yIw9JElEhUrf+znn9/tn5jzO6/m6r+f+ep57rvzJi1ZnBBYt
WrSP/PnfvxrIjP37xyQCDV6vHH1ZCRfnFG7NzTOJhK+2n0KeVwI3X1Np+geT
cGQXXVKJrYQtyuYnR74wCbuhsqHU05WgJxnKa+gk5au9jRWplYA+TtUncJhE
0CblvscHK8Dq5jtMy5FJFF0TkH48UQa+TaEXnCvFCdka5YhEqxKI+OLTOVMs
TkzMLLb4u70E0innjULyxYks8/rISxtKoAHMpZOzxQm/RhlO1J9iWMeVrmiN
ESc6FI5FJWUVQ2N0pugOZ3EicOcNK+biYlCyqsOWSogTOS4p7bEvC2G7e6l0
Ol2ckJJ6ydRnF8LBcFaQurA4cUnv4uxkYiEEvIo+ZDYvRuQ+Vv4Z71UIrVuO
/A4aEiMWnu16VK9cCFeXjJl9KRYjZGQomuX3X0B7O2PspZMYkROxMLDEvwCu
nX5RidmLERzR6wE7XAtAbcYh9sFhMWIwbnTvlWMFcGtJ3vbz5mJEVGljnOL2
AjC0srsroS9GuNvWPdu3kA+ZTRnajhJiBO/RVQV+WD741RsG/akUJT6NX3TV
TM8DxaOfDo2UiBKBJiZaUffzoPVztHJzgShhJm4y/udGHqjShlqePBclnPfm
mEq45cGAafj6fXGiRM7zMQOmXh6Y1XS8SbggShz440d4NufCauLiUj1ZUeJm
ofiXaYlcaJDS8dq2TJT4lW5U1SKcC1fOzLcZSokSP2XkvF/Oc6GDHhZrTBUl
Jprpvh1DXIi2SZSymmEQLiJGLp0lXBD8Ui1xoYFB4FPJrK3OXMgzDPfwqGUQ
2Er1pbrHuXAi+kDzf68YxOG2b3Emh7hQrsO7e6WYQTRXuP5NBC74BH8Tv5XB
ICh2L4rXruDCZ+mVYk8CGMT+c7BXOZUD8ef63DJ9GQTb7ujC+UgO7C7LaHjm
ySAcXtY7NPtzIP2EegT3HIMY485uZxzhgD1mzKi0ZhBKYyEq26Q50IQu0rpU
GUQ8tsU/5D4bAmO1z3dvYBAStfTfkmFsUB2Zq+tbxyDGw79FvPZmw607obdG
ljOI9aZxCymH2bCzI4EyI8QgvodrlYutZsML12phZg+dCOxfeesTOwe2yrlr
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

          "]]}, Annotation[#, "Charting`Private`Tag$30462#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4, 4}, {-0.9999995520684569, 0.9999999715405162}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         SuperscriptBox["x", "2"], ")"}], "fourierSeries1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707084270000413*^9, 3.707084284584919*^9}, 
   3.7070843806042747`*^9, 3.7072445994808893`*^9, 3.707244663173896*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"a07b3b4e-48ee-42d3-be0b-9b389cfe4710"]
}, Open  ]],

Cell["Create the 4th order Fourier Series approximation:", "Direction",
 CellChangeTimes->{{3.707084347214493*^9, 3.707084353813814*^9}, 
   3.707084434515164*^9, {3.707084503010277*^9, 3.707084503794415*^9}, {
   3.707084618984543*^9, 3.707084620184947*^9}, {3.707162335655785*^9, 
   3.707162336248073*^9}},ExpressionUUID->"d7ab4e0b-4e02-4dd5-9039-\
07849a4857f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourierSeries4", "=", 
   RowBox[{"N", "[", 
    RowBox[{"FourierSeries", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "4"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7070843561031*^9, 3.707084367449272*^9}, {
   3.707084506627408*^9, 3.707084513515045*^9}, {3.707084561419264*^9, 
   3.70708456401019*^9}, 3.7070847239209023`*^9, {3.707085399833156*^9, 
   3.707085400078329*^9}, {3.707244199553761*^9, 3.7072441998072557`*^9}, 
   3.707244577237721*^9, {3.707244646843452*^9, 3.7072446492290363`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4ee89b29-100a-425c-8d78-eeabc319ffaf"],

Cell["and plot:", "Direction",
 CellChangeTimes->{{3.7070844309330177`*^9, 
  3.7070844329073343`*^9}},ExpressionUUID->"1349f22b-36f9-4bb7-81e2-\
68686c1083c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", "fourierSeries4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7070842452274923`*^9, 3.7070842841343946`*^9}, {
  3.707084366363307*^9, 3.707084372425469*^9}, {3.707084515371374*^9, 
  3.707084515507042*^9}, {3.707084576299629*^9, 3.707084576458129*^9}, {
  3.7070854050139027`*^9, 3.7070854051413193`*^9}, {3.707244581254642*^9, 
  3.70724458169347*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b2807a2b-1470-4ba4-a5a0-9094af080e10"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rozea0eSMKb08lvwNTq6ezFj3f0pEp4W1peGWNPRx/5fF47NkLDbUJj2yYSO
Ctp/+6cx+BJ32awPPUVH++5f5qxfIOGcQ5ziVzU6UkllU2f4CZhfmjKPOERH
HkcfJexcIeHtM5UH3/bSkVS97S+9VRL2b/aOiN5NR0XKhZ2yDJ6tiCwtjtlK
R5p39P1zGPqK/LqxOAE68prTOLzM0KzYTCCRSkfy7Zcsxhk6TDdMIXl5Gl0R
o9gGMPSRf4NmqVPTyGt0oKyfsX7zlX3304emUWaVHZXG2P/OrMvXjI5ppC9+
6mXM/3n5cW5hVv00um7T2ijEiDd+HXUku2wa3XQpNT/CyOd4qC7fbzyNNKXV
Xgsy8u2XeSePMqYR8a516iudcf6e32hDcdOoUSpFI4rB1w5/f8Su/zqNzoyp
ZRnSSEgTLbI7EjSNdsVQhmNHGPW43Shm5zeNwqR7HOMHGPHmD3S88ppGpvym
U2Y9jP4UnAv56TyNUuNOsqa0M84/c/MGXutpVOf9xdiujgQ9Dsm/isbTaJsX
paagklHPs4f8rHWmkWNFr0kNg8+3L5uxpCtMo676m6uz2Yx+1L2K2qWm0ft6
Yat16SREfXG7x75jGp0X0jreFs+o/7GQaXPOafRrh9dBn88kOAfGJj1enULw
ZMHdjsHv2b3Z1xOnp9CTI5nlCy8Y/efzr5fSMYWGJW4LHrlHgkm5cP331CkU
pPBnmmDwe4iwbEBt9BSqtX2hVn6ChE571VPLn6ZQavVyHC8wzlPAskDPdwpl
xNLMfkuScM84NH3WYgqNkpr9LfOM+yMq6Zao/hRK/pVSqzhGA9Z5JKOjNYWc
bTZPnOmkgX9IV+Tn/VMouspDExUw7ovOne802KaQ6/jczqAXNCi6GukcmDiJ
1Lofe2cz7ivuX+lyORGTaCRY7r4iE+O+4ikc7w+eREYfNQrdyHFoSey/pPxo
EuVsupdrVjkOY9MSJl2mk4gvYF3FM59xWOcZo7iXMomsRPQ41ckx8MmQLBGY
m0C3D+vNVbeNwSIt+uz02AQyDZ4SUCwbgx6rKI+s5glUufVhrm/kGKQei/ij
ljyBemOr00xMx8CA7fNpU6sJ1O797ip/xijs2bKzkukeiQ5GttWpWIyAjCIp
8216DJ274rLgfn4QHmmMV/+8O4hq52we5V/qgj/Hx/QUbBi+5zjhGqfTBUy6
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
BDyFjMoMGZydlnRVdtpjBBzkd2gjBjc/LDyaXhM/AnvSzEXLeScAr6SmcHCP
AvvgxJZw2wm4m7af3olHofj0dt4z6ychcJTTU4wRl+De7k2OwpOgUJl5XEZ0
HKx5v4m+lZiEpj9CGtzy47BYLqPQrDIJfi2+FVrG4yBz4oiFtc0kRIZ5r4v6
MA4B6hYxt9InocZiientFhq0ie1IC8ydhMofXES6JA2kmHtz0ksmgVoj8fqr
Eg3+4GvV822TMOQcbt5tRIMZVfc5L7Yp4Cfltg4y+MX80AfN1yZT0Jdz5dL7
KRpEbT6vl2Y9BUHF2QU6qzSYnhU923BtCmTlksf/cJLw4sf3G1seTIFjn83T
tR0kIPmsN1+jpwAFlhp9ZPAXz3qPz/kpU6CcqeBsZ0iC2SRE9/+agmT1FKWp
cyRMJRVnS1VPwbZU6YATNxl8L9vUnTI/BfMK29YPB5Bwi+fjaB3zNIQ2vS6M
DSbh96jlzAzPNHSOVMxLhjH4L3aAQ2XnNFjJ61WbJZIQ/ix2/bn/psFieNqe
8wcJ5BUHYc+D06CVLOJ55xcJT/fM7vtzYhraJw+MujJ4tZ6ardxnOA25GUbq
/Aye3TlwX51qOQ2mcw6sVrUMni48pit5ZRqWayvi7ZoYPBrJZqrjOA0/Y1h/
ibeRwP641PqGxzTg8OWEj10kGNm8vObvMw2OKjTWkj4Sxndu9KwNmYbAa+bt
x8ZIOHTv6+28yGn4XJjn6kmS4F0veyk5cRr2UZqvO06RUCGbbRaaNQ0GfGxq
22dI2OSrdcr/DyO+mXWPPOf+/391LdyvmAZekMl6t8DoU2WrAzcap8HFcvja
xSUS6IGjEhZd0yAmpSPet0zC0THXrToj07Cil3t76yojf01WPmU6Y373nn+s
ayTUfgmgSK5Ow9G/HWPhDC08LzyziYMO4V7p8nSGttOPGWJbT4cNNnOH5hk6
OfZgG30bHZR8XV4kMvQiy5+/veJ06Dz2JPv/7wNonD+dX7uPDkl1q2f2M/Z7
ldGakadMB87NOh2LjHha+S/HJqvTQVnh/KQzI97dV6c/h+rSocwib8tXRj4O
fx689jelA6tv0OA9Rr5Z23ie3L9Ah2dH34+yMerB7Bx898Z1OqzYCWceZdTr
VNXuGxbOdEjdsLNNnFHPoD0pVjoP6GBkpTWePUpCl5eqofIzOrjrNN1fGSRB
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
Ok3A/cRNVTnKQnynyzrh/CQBUfsiqO7qQZxdNVX2J8mGxT1KkQ5jAqzh7xB0
RJINPZnzJJaXCHDhpmoTS2k2FAzs8/kcIMCVj++2Ga9gg8pv2/M0RAT4S/CW
qY2abIislylVFPDxEf348vXabHi/wKZzTiIfd0+JB69BbOAv7B4bMudjoWuT
tKwRGzQTp60VC/qx6F4fTRFbNmxe7m+6x6kPXxdrn5myZ4P8sVcbD5B9mIt3
Vo46saHD7F1R1NNeLKu+yKzPgw3KSmHfW8d78AbJZx4fA9ngsTrQaos7Dx9u
HMp4kMmG8KtLfJK43/DXcCuvmFw2yJYpfTJ80IkdDcu1o16wYaVeVW/k2k7s
URD5NvAlG9ok6jXUt33FQfc29Lo2sGGPmongt9w2nHvkr5XaM2y4FnazLTe3
ATs8/y4fL8KBdPkfoW9u1GMpjreMmDgHpJTo5mHPT9in8Oz8Tws4YEJ6BXSp
1GJtqWuzJ5Q40PVzeLhx4Wtc8Tax5a4pB1hg8Y/CnXjcoNF8YzKVA1Fekjst
h2vRlRDrcLtsDiRryvmScp/Qpm/twVV5HFCXK75nuqMe3YngXYgq44CVbKCn
XORnZMsfdl/bwAH9fh2nuAUtqCeONLb6xYEgKvODjGknihmLNMCiJOjW8wpG
GzrRLhMp/dUECbxplYu6h76h9ClZrSEpEtI3moS3m3Whk+bKSsEqJGzLqlgj
ps1DE8T2eYXmJCz2/Jog/7gPSQqpWxWHSVDlB9abifajdXUtijV2JDRFF2Vc
tutHR2JOGXScICG4OiUni8tHvme3NfW5k7Dz3MP+23/yUaQt4TzsRYLGqb/7
LPL56NWqxODf/Jn3/WqieocGUJuYuyz3MnP/7q+TVokDaKxfK2PJNSbedhJU
BANI+UldzbobJPQWlQQ1+QlQuK7IfNMUEua77myMPT2IUhXex1tnkBChF+2c
mz2Iyufe/d3xCQkjI3VzjHiDaPSNuplfEQlr5UwyenYLEZU503URk7D0V6hn
5xkhUop44x1SScKj45qPDVOE6LD50dsPP5Dgn7iJrT8uRN5b1iul1pMws74p
umYpw59LJ/Jzm0l4a1dtlLOVRimzr3YV/0vCqNfODp4NjV52Rnyp/EZCQlqn
gdsZGn2ptHb50EsCZ6dO+rabNBp+rDTdJCDh7NZQN6t0GnFCRkI6h0jYf1V/
XWEZjVa7Y7mBMWaeXVFlh2tptO1ASNboNAkly0S0dRh+ttSw2DY7h4IfacMC
iwEaeUqv+iguRsEOP+Vj2aM0uj4ltFvApoDL2e6oO02j5H+LvsvOp2B/nM7k
r1kalb4Muqi4iIIY0y8O4wwfNyaZSqrJUhC3d4XiCib+PWhZ0mYFClory3+e
m6QR4cL/Q0+RgtvFvrQYw8erTF5U7l5LQd6Nk1vKe2mkq37J/KAaBaZq8Rbp
LQwvL9zbY/sHBej5ck5FNY08xmR8j2+hYHOdn7kEw8PBX3jinlspuG834HU+
keH1ktw7Z/UpOHqxuG/FdRqVxJ1fG2hIQdukq8+YO1PfJaOisD0UyNZMLJ/Z
TyPacZFxzAEK2sXYahrqNJIw6myNP0SB4pM1q+M5NFq5Psst3ZoC+/JPH/V6
hEiHe+Zn3lEKJNcUay0tFaKDwzvCSx0pcM6ueaIWJURXC9pyak9S8GdzhxH1
uxDFx6ZCizeT3/OR2deZQVTk713XdYaZd5ey9kTVIBLs4IyMXaagL6vKUGL/
IDKt09kkf4eC0JItkct2CBChwy4veUABr+TekpahAVSe3GJsk0TBTHyyk+39
AaTud8Y+NpuptyD379ZePqIU8kNlqph8+qHPMq360T/XgqQLqymIlReW3xP2
ofPD5omWtRToeLC4sRf6kKBqND+mlYJTh8WHZmN70Vu3jV2LhinIahG3ic/l
oQuNIu7Px5n++Jl6Luo8tAXqJg7+pKCYWzs3LbMbpSz0oG5JcEGlff/a0gdd
KLAoS0tSgQviZTfsW491IpBYG0nt4cJr8tiKrKVf0ITnhGz2AS6Mp7J0LRqb
UE7r60cmFlwofjqRNRrWiJblOBWHOnDBNrw6M260Hs2YJ/cQZ7ggaswz/mz4
HuUnKWwVT+HCuWDyYZRLFnIn6dcpGVwwvrwrcIdJIlrjW2ZqkMuFqvXKDnI5
oejWblvnKyVcqBYzk6rSfYhPDd27Oa+eC5HqebuLGkqxirXLsqRmLqh6ZulE
PynHnZVaafrtXBARt49efroS77/TXHaxnwubNT+srBt/iyXmphqtoLnQnSi6
y+B5Dcauvg0vR7lwXKMwLfvkR+zz2cDu6BQXcvoWqFktrMP/2ycG/98n9h/1
4DBf
          "]]}, Annotation[#, "Charting`Private`Tag$34358#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
yhRvdOuUNpx8VwWEy0kfCOfc0f8AhfrKfw==
          "]], 
         LineBox[CompressedData["
1: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
ItY6vY/1SQo2+zSTnZkKwiZ2Wgcdz+IfrIBnYQ==
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$34358#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4, 4}, {-0.9999995520684569, 0.9999999715405162}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         SuperscriptBox["x", "2"], ")"}], "fourierSeries4"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707084270000413*^9, 3.707084284584919*^9}, 
   3.7070843806042747`*^9, 3.707084528713365*^9, 3.707084558782074*^9, 
   3.70708458880214*^9, 3.7070854189837017`*^9, 3.707244216669217*^9, 
   3.707244612169176*^9, 3.707244667677747*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3a1426ff-4826-4ba2-aeb0-b8004fcc1771"]
}, Open  ]],

Cell["Create the 7th order Fourier Series approximation:", "Direction",
 CellChangeTimes->{{3.707084347214493*^9, 3.707084353813814*^9}, 
   3.707084434515164*^9, {3.7071623201121197`*^9, 
   3.7071623213441133`*^9}},ExpressionUUID->"f97b054f-66d9-4a0a-8c60-\
0a479bd64594"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourierSeries7", "=", 
   RowBox[{"N", "[", 
    RowBox[{"FourierSeries", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "7"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7070843561031*^9, 3.707084367449272*^9}, {
   3.707084628771707*^9, 3.70708464856918*^9}, 3.707084731951214*^9, {
   3.707085284121108*^9, 3.7070852863120403`*^9}, {3.7070854111983833`*^9, 
   3.707085414268839*^9}, {3.707162316256974*^9, 3.707162354816073*^9}, {
   3.70724458687929*^9, 3.707244587277195*^9}, {3.707244640477756*^9, 
   3.707244642659212*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8fa571b6-9ebd-435b-966c-47c54417410d"],

Cell["and plot:", "Direction",
 CellChangeTimes->{{3.7070844309330177`*^9, 
  3.7070844329073343`*^9}},ExpressionUUID->"1db755eb-71d6-4030-8135-\
2c6ccb36364b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", "fourierSeries7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7070842452274923`*^9, 3.7070842841343946`*^9}, {
   3.707084366363307*^9, 3.707084372425469*^9}, {3.707084642993476*^9, 
   3.707084643577462*^9}, {3.7070852907035093`*^9, 3.707085291078998*^9}, {
   3.707085417509893*^9, 3.7070854177731333`*^9}, {3.707162324585381*^9, 
   3.707162324985509*^9}, 3.707244590381497*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"8c232b20-d967-40b5-af7a-6ab1c0356786"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rozea0eSMKb08lvwNTq6ezFj3f0pEp4W1peGWNPRx/5fF47NkLDbUJj2yYSO
Ctp/+6cx+BJ32awPPUVH++5f5qxfIOGcQ5ziVzU6UkllU2f4CZhfmjKPOERH
HkcfJexcIeHtM5UH3/bSkVS97S+9VRL2b/aOiN5NR0XKhZ2yDJ6tiCwtjtlK
R5p39P1zGPqK/LqxOAE68prTOLzM0KzYTCCRSkfy7Zcsxhk6TDdMIXl5Gl0R
o9gGMPSRf4NmqVPTyGt0oKyfsX7zlX3304emUWaVHZXG2P/OrMvXjI5ppC9+
6mXM/3n5cW5hVv00um7T2ijEiDd+HXUku2wa3XQpNT/CyOd4qC7fbzyNNKXV
Xgsy8u2XeSePMqYR8a516iudcf6e32hDcdOoUSpFI4rB1w5/f8Su/zqNzoyp
ZRnSSEgTLbI7EjSNdsVQhmNHGPW43Shm5zeNwqR7HOMHGPHmD3S88ppGpvym
U2Y9jP4UnAv56TyNUuNOsqa0M84/c/MGXutpVOf9xdiujgQ9Dsm/isbTaJsX
paagklHPs4f8rHWmkWNFr0kNg8+3L5uxpCtMo676m6uz2Yx+1L2K2qWm0ft6
Yat16SREfXG7x75jGp0X0jreFs+o/7GQaXPOafRrh9dBn88kOAfGJj1enULw
ZMHdjsHv2b3Z1xOnp9CTI5nlCy8Y/efzr5fSMYWGJW4LHrlHgkm5cP331CkU
pPBnmmDwe4iwbEBt9BSqtX2hVn6ChE571VPLn6ZQavVyHC8wzlPAskDPdwpl
xNLMfkuScM84NH3WYgqNkpr9LfOM+yMq6Zao/hRK/pVSqzhGA9Z5JKOjNYWc
bTZPnOmkgX9IV+Tn/VMouspDExUw7ovOne802KaQ6/jczqAXNCi6GukcmDiJ
1Lofe2cz7ivuX+lyORGTaCRY7r4iE+O+4ikc7w+eREYfNQrdyHFoSey/pPxo
EuVsupdrVjkOY9MSJl2mk4gvYF3FM59xWOcZo7iXMomsRPQ41ckx8MmQLBGY
m0C3D+vNVbeNwSIt+uz02AQyDZ4SUCwbgx6rKI+s5glUufVhrm/kGKQei/ij
ljyBemOr00xMx8CA7fNpU6sJ1O797ip/xijs2bKzkukeiQ5GttWpWIyAjCIp
8216DJ274rLgfn4QHmmMV/+8O4hq52we5V/qgj/Hx/QUbBi+5zjhGqfTBUy6
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
BDyFjMoMGZydlnRVdtpjBBzkd2gjBjc/LDyaXhM/AnvSzEXLeScAr6SmcHCP
AvvgxJZw2wm4m7af3olHofj0dt4z6ychcJTTU4wRl+De7k2OwpOgUJl5XEZ0
HKx5v4m+lZiEpj9CGtzy47BYLqPQrDIJfi2+FVrG4yBz4oiFtc0kRIZ5r4v6
MA4B6hYxt9InocZiientFhq0ie1IC8ydhMofXES6JA2kmHtz0ksmgVoj8fqr
Eg3+4GvV822TMOQcbt5tRIMZVfc5L7Yp4Cfltg4y+MX80AfN1yZT0Jdz5dL7
KRpEbT6vl2Y9BUHF2QU6qzSYnhU923BtCmTlksf/cJLw4sf3G1seTIFjn83T
tR0kIPmsN1+jpwAFlhp9ZPAXz3qPz/kpU6CcqeBsZ0iC2SRE9/+agmT1FKWp
cyRMJRVnS1VPwbZU6YATNxl8L9vUnTI/BfMK29YPB5Bwi+fjaB3zNIQ2vS6M
DSbh96jlzAzPNHSOVMxLhjH4L3aAQ2XnNFjJ61WbJZIQ/ix2/bn/psFieNqe
8wcJ5BUHYc+D06CVLOJ55xcJT/fM7vtzYhraJw+MujJ4tZ6ardxnOA25GUbq
/Aye3TlwX51qOQ2mcw6sVrUMni48pit5ZRqWayvi7ZoYPBrJZqrjOA0/Y1h/
ibeRwP641PqGxzTg8OWEj10kGNm8vObvMw2OKjTWkj4Sxndu9KwNmYbAa+bt
x8ZIOHTv6+28yGn4XJjn6kmS4F0veyk5cRr2UZqvO06RUCGbbRaaNQ0GfGxq
22dI2OSrdcr/DyO+mXWPPOf+/391LdyvmAZekMl6t8DoU2WrAzcap8HFcvja
xSUS6IGjEhZd0yAmpSPet0zC0THXrToj07Cil3t76yojf01WPmU6Y373nn+s
ayTUfgmgSK5Ow9G/HWPhDC08LzyziYMO4V7p8nSGttOPGWJbT4cNNnOH5hk6
OfZgG30bHZR8XV4kMvQiy5+/veJ06Dz2JPv/7wNonD+dX7uPDkl1q2f2M/Z7
ldGakadMB87NOh2LjHha+S/HJqvTQVnh/KQzI97dV6c/h+rSocwib8tXRj4O
fx689jelA6tv0OA9Rr5Z23ie3L9Ah2dH34+yMerB7Bx898Z1OqzYCWceZdTr
VNXuGxbOdEjdsLNNnFHPoD0pVjoP6GBkpTWePUpCl5eqofIzOrjrNN1fGSRB
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
Ok3A/cRNVTnKQnynyzrh/CQBUfsiqO7qQZxdNVX2J8mGxT1KkQ5jAqzh7xB0
RJINPZnzJJaXCHDhpmoTS2k2FAzs8/kcIMCVj++2Ga9gg8pv2/M0RAT4S/CW
qY2abIislylVFPDxEf348vXabHi/wKZzTiIfd0+JB69BbOAv7B4bMudjoWuT
tKwRGzQTp60VC/qx6F4fTRFbNmxe7m+6x6kPXxdrn5myZ4P8sVcbD5B9mIt3
Vo46saHD7F1R1NNeLKu+yKzPgw3KSmHfW8d78AbJZx4fA9ngsTrQaos7Dx9u
HMp4kMmG8KtLfJK43/DXcCuvmFw2yJYpfTJ80IkdDcu1o16wYaVeVW/k2k7s
URD5NvAlG9ok6jXUt33FQfc29Lo2sGGPmongt9w2nHvkr5XaM2y4FnazLTe3
ATs8/y4fL8KBdPkfoW9u1GMpjreMmDgHpJTo5mHPT9in8Oz8Tws4YEJ6BXSp
1GJtqWuzJ5Q40PVzeLhx4Wtc8Tax5a4pB1hg8Y/CnXjcoNF8YzKVA1Fekjst
h2vRlRDrcLtsDiRryvmScp/Qpm/twVV5HFCXK75nuqMe3YngXYgq44CVbKCn
XORnZMsfdl/bwAH9fh2nuAUtqCeONLb6xYEgKvODjGknihmLNMCiJOjW8wpG
GzrRLhMp/dUECbxplYu6h76h9ClZrSEpEtI3moS3m3Whk+bKSsEqJGzLqlgj
ps1DE8T2eYXmJCz2/Jog/7gPSQqpWxWHSVDlB9abifajdXUtijV2JDRFF2Vc
tutHR2JOGXScICG4OiUni8tHvme3NfW5k7Dz3MP+23/yUaQt4TzsRYLGqb/7
LPL56NWqxODf/Jn3/WqieocGUJuYuyz3MnP/7q+TVokDaKxfK2PJNSbedhJU
BANI+UldzbobJPQWlQQ1+QlQuK7IfNMUEua77myMPT2IUhXex1tnkBChF+2c
mz2Iyufe/d3xCQkjI3VzjHiDaPSNuplfEQlr5UwyenYLEZU503URk7D0V6hn
5xkhUop44x1SScKj45qPDVOE6LD50dsPP5Dgn7iJrT8uRN5b1iul1pMws74p
umYpw59LJ/Jzm0l4a1dtlLOVRimzr3YV/0vCqNfODp4NjV52Rnyp/EZCQlqn
gdsZGn2ptHb50EsCZ6dO+rabNBp+rDTdJCDh7NZQN6t0GnFCRkI6h0jYf1V/
XWEZjVa7Y7mBMWaeXVFlh2tptO1ASNboNAkly0S0dRh+ttSw2DY7h4IfacMC
iwEaeUqv+iguRsEOP+Vj2aM0uj4ltFvApoDL2e6oO02j5H+LvsvOp2B/nM7k
r1kalb4Muqi4iIIY0y8O4wwfNyaZSqrJUhC3d4XiCib+PWhZ0mYFClory3+e
m6QR4cL/Q0+RgtvFvrQYw8erTF5U7l5LQd6Nk1vKe2mkq37J/KAaBaZq8Rbp
LQwvL9zbY/sHBej5ck5FNY08xmR8j2+hYHOdn7kEw8PBX3jinlspuG834HU+
keH1ktw7Z/UpOHqxuG/FdRqVxJ1fG2hIQdukq8+YO1PfJaOisD0UyNZMLJ/Z
TyPacZFxzAEK2sXYahrqNJIw6myNP0SB4pM1q+M5NFq5Psst3ZoC+/JPH/V6
hEiHe+Zn3lEKJNcUay0tFaKDwzvCSx0pcM6ueaIWJURXC9pyak9S8GdzhxH1
uxDFx6ZCizeT3/OR2deZQVTk713XdYaZd5ey9kTVIBLs4IyMXaagL6vKUGL/
IDKt09kkf4eC0JItkct2CBChwy4veUABr+TekpahAVSe3GJsk0TBTHyyk+39
AaTud8Y+NpuptyD379ZePqIU8kNlqph8+qHPMq360T/XgqQLqymIlReW3xP2
ofPD5omWtRToeLC4sRf6kKBqND+mlYJTh8WHZmN70Vu3jV2LhinIahG3ic/l
oQuNIu7Px5n++Jl6Luo8tAXqJg7+pKCYWzs3LbMbpSz0oG5JcEGlff/a0gdd
KLAoS0tSgQviZTfsW491IpBYG0nt4cJr8tiKrKVf0ITnhGz2AS6Mp7J0LRqb
UE7r60cmFlwofjqRNRrWiJblOBWHOnDBNrw6M260Hs2YJ/cQZ7ggaswz/mz4
HuUnKWwVT+HCuWDyYZRLFnIn6dcpGVwwvrwrcIdJIlrjW2ZqkMuFqvXKDnI5
oejWblvnKyVcqBYzk6rSfYhPDd27Oa+eC5HqebuLGkqxirXLsqRmLqh6ZulE
PynHnZVaafrtXBARt49efroS77/TXHaxnwubNT+srBt/iyXmphqtoLnQnSi6
y+B5Dcauvg0vR7lwXKMwLfvkR+zz2cDu6BQXcvoWqFktrMP/2ycG/98n9h/1
4DBf
          "]]}, Annotation[#, "Charting`Private`Tag$42902#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
iu2oR/qAxAeJdHjBlsSYx9aOEt5ru2d8TwN1F8s7cQVt6Md+15WmlVQQElcS
4g1qQye5VeUbYlJhs5u3OdiyDdnGfpjKOJsKXa8Wn9LJtiGFi0wGV8gpUHim
UfERYxtK6Cbq1ialQPhy5tR8dyui45b0WDRPAcfPQbE3s1uRli4WxLtTQHyH
Ot1l01aUH/I1gCc2Gegqhb7UHGlF0YFT9zxuJMOgx+atMzStKMjGZt85+WQo
k+oSKGlrQWJiW/edGJMheqiwXvpzC9pozeUY6E0Ct8jXfik+LUhmRefi86Ik
uKTtJC9o2IJeyZ80MXqbBNJbOhMR4i3oRI8xwwmPJGDLPfSedbMZSe2s/Cdk
nQQT1xl0/RqbUV1CReH6+ST4xTe8vZLUjA4th5l+OZkECbXf8xw9mtER57MT
cCQJvB/H2I3pNqP7UZWSgSJJYCb/kM9CpBnd3PmlzGNvEhyfNKppXm5COgYW
9HR7koDng4yPdk0T6nJJOsEtkARz+hwyKK4JuUTw3gwXSoIauumR465NaHm2
3fmeeBKkFVW9zTrXhKyX0nbEyCbBM4ck7QOCTchqgtK7BUmAVWhW5YcbkcNc
u+qzS0nwKPmrpcjLRlRnLRIoeDMJ5Aiu5ZzyjUic0Ws4zycJSK5SElu9DYhG
+ZalTHQSpPSOv5p61oBSE2ymn35Jgh7v3fEf5RsQsctJ2rY1CTiFzuVeGqlH
Q/vNPaKWksDdJr3lK9Sjyy/LRn8oJ0MGbfeo41wdMtse/fX6WjIMJLIui3ys
Q1viepIeL5NBa9yB7+VGLUo4rRCkMpIMngEfJFQ/16K+v9lTa9wpkH2oTmnR
tBaxuDulPz+TAnwORy3Nv9Sg8jqb9rq0FCDOzSdIOv9BdoILSCkwFQTDhfMH
hP4g2/gslk/lqWAge+lXRH01SnA8Mn7pXyqUuOaPb0hWI8KKwzk97zR4seYm
WTtehaSCRQI6/dNBkm6j4I5FBXL+nSDQWpABVkmSlfvZKtBdN1o63q0MiNCw
6Ggt+YW4w6LefdDIhI2AsrVTu3+hyLdVAyc7MqGW/fFpQvNPxMInUsK6kQVd
kiyhV179QESH85IyJ3JAzfF27s/p78j54NOXv71zID2npuWw9nfk4Rhy//vP
HHik8Ipvg64MbXUXlVeL5YKAKs+nGI+vKLI8JAel5YK/n+svuo4S1KGbz2f6
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42902#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4, 4}, {-1.1015052256848876`, 0.9999999715405162}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         SuperscriptBox["x", "2"], ")"}], "fourierSeries7"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707084270000413*^9, 3.707084284584919*^9}, 
   3.7070843806042747`*^9, 3.707084644019788*^9, 3.707084675078919*^9, 
   3.707085311220007*^9, 3.707085438241226*^9, 3.7071623813423157`*^9, 
   3.707244637739728*^9, 3.707244676847678*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"415dc419-e223-4535-9868-bbde5d3af063"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application: Numerical Analysis", "Subsection",
 CellChangeTimes->{{3.7070809670284557`*^9, 3.707080970804514*^9}, {
  3.707084459539116*^9, 3.707084460602927*^9}, {3.7070853130222063`*^9, 
  3.7070853173661327`*^9}, {3.7070890824895277`*^9, 3.7070890878576508`*^9}, {
  3.7070898214234447`*^9, 3.707089822583433*^9}, {3.7070899487578278`*^9, 
  3.707089955365923*^9}},ExpressionUUID->"76ba5626-dfbb-4991-ad32-\
868674c55f52"],

Cell["\<\
We can then compare the numerical integral to the integral of the Fourier \
Series (of which all the terms are integrable).\
\>", "Text",
 CellChangeTimes->{{3.707084778608624*^9, 3.707084801958261*^9}, {
  3.707089002635331*^9, 
  3.70708900917102*^9}},ExpressionUUID->"f461bccb-aaa9-4d7f-a386-\
f71b1f801e35"],

Cell["\<\
Compute a list of differences between the integrals as the order of the \
series increases and plot:\
\>", "Direction",
 CellChangeTimes->{{3.707084803846306*^9, 3.707084843229723*^9}, {
  3.7072444070190763`*^9, 
  3.707244408009083*^9}},ExpressionUUID->"e3a56751-25ae-4847-a5d5-\
badb42a5ffee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"x", "^", "2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "-", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"FourierSeries", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"x", "^", "2"}], "]"}], ",", "x", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707084846859263*^9, 3.707084891310231*^9}, {
  3.7070849370638857`*^9, 3.7070849434153357`*^9}, {3.7070850009896173`*^9, 
  3.707085005079486*^9}, {3.707085193770732*^9, 3.707085225761116*^9}, {
  3.707085294431571*^9, 3.7070852948389273`*^9}, {3.707085420973769*^9, 
  3.707085421341228*^9}, {3.707155532530347*^9, 3.707155598213984*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7f91ba75-7d67-4a55-aebc-245ba9ef7002"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2757862853513531`", ",", "0.2631087453849914`", ",", 
   "0.13637595951295656`", ",", "0.042757653987412825`", ",", 
   "0.08947267711168361`", ",", "0.043100199799536165`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.707084919192054*^9, 3.707084969217868*^9, 3.707085059804282*^9, 
   3.70708520848383*^9, 3.707085275000382*^9, 3.707085349040194*^9, 
   3.707085465769732*^9, 3.707155478301839*^9, {3.707155544720992*^9, 
   3.70715559167682*^9}, 3.707155630217215*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"365c5948-c882-402e-a112-8d18f2759c38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7071554252060413`*^9, 3.70715544771978*^9}, {
   3.7071555176182756`*^9, 3.707155523486866*^9}, 3.707155561869301*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"599ec5cb-6097-4e9d-874c-5ffcf3d04c79"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.2757862853513531}, {2., 0.2631087453849914}, {3., 
      0.13637595951295656`}, {4., 0.042757653987412825`}, {5., 
      0.08947267711168361}, {6., 
      0.043100199799536165`}}]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.}, {0, 0.2757862853513531}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.707155430586629*^9, 3.707155440340128*^9}, 
   3.7071554785687857`*^9, 3.707155523984116*^9, 3.7071556303038797`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"57718c36-d818-4553-80dc-d38b804ba544"]
}, Open  ]],

Cell["\<\
and we can see that the difference is tending towards 0. Thus taking the \
integral of the Fourier Series of a function is one way to approximate the \
area under a curve.\
\>", "Text",
 CellChangeTimes->{{3.707085266158671*^9, 3.707085274750717*^9}, {
  3.70708533459792*^9, 3.707085334925832*^9}, {3.7070891413531103`*^9, 
  3.707089178632875*^9}},ExpressionUUID->"53cfd6b4-de86-458b-ab1a-\
c54d6421edd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another Application: Solving Differential Equations", "Subsection",
 CellChangeTimes->{{3.7070809670284557`*^9, 3.707080970804514*^9}, {
  3.707084459539116*^9, 3.707084460602927*^9}, {3.7070853130222063`*^9, 
  3.7070853173661327`*^9}, {3.7070890824895277`*^9, 3.7070890878576508`*^9}, {
  3.7070898214234447`*^9, 3.707089822583433*^9}, {3.7070899487578278`*^9, 
  3.707089955365923*^9}, {3.7071511069619417`*^9, 3.707151110343761*^9}, {
  3.707152554190937*^9, 
  3.707152556953401*^9}},ExpressionUUID->"5dd96d08-7eb5-4d83-acef-\
05a77c219081"],

Cell[TextData[{
 "Consider the differential equation: ",
 StyleBox["y\[CloseCurlyQuote]\[CloseCurlyQuote]  = - kx, ",
  FontWeight->"Bold"],
 "k > 0 with boundary condition y(0) = 0, y\[CloseCurlyQuote](0) = 0. \nWe \
will solve this using Fourier series."
}], "Text",
 CellChangeTimes->{{3.707151409511475*^9, 3.707151445031061*^9}, {
  3.707162938993696*^9, 
  3.707162995190475*^9}},ExpressionUUID->"8519492d-8778-40f0-a1f6-\
10f3b29eacb5"],

Cell["\<\
First find the Fourier Series of the right-hand side of the equation.
We show the first few terms here:\
\>", "Direction",
 CellChangeTimes->{{3.707151468262257*^9, 3.707151478478037*^9}, {
  3.707151523391279*^9, 3.707151531140979*^9}, {3.7071556205951357`*^9, 
  3.707155620827125*^9}},ExpressionUUID->"8ef843b7-f2a7-472e-90ce-\
0a2d526c8521"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "k"}], "*", "x"}], ",", "x", ",", "8"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.707157066735187*^9, 3.707157075670559*^9}, {
   3.70716297320028*^9, 3.707163000295157*^9}, 3.707163568672751*^9, {
   3.707163853921309*^9, 3.707163866567891*^9}, {3.707163916015848*^9, 
   3.7071639166148243`*^9}, {3.70716517009691*^9, 3.7071651734946747`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"d529fe7f-3428-406c-8d0c-37d0a5d95a77"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "k", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{"k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", "k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "5"], " ", "k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", "k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"6", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["2", "7"], " ", "k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"7", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "k", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"8", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7071570768836937`*^9, 3.7071571266178207`*^9, 3.7071571769082947`*^9, 
   3.7071630027295637`*^9, 3.707163569658012*^9, {3.70716385638339*^9, 
   3.7071638673125877`*^9}, 3.707163917365013*^9, 3.707165174325983*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"a81a22eb-777d-4a54-b93b-c63e0dc92a57"]
}, Open  ]],

Cell[TextData[{
 "We now assume that y(x) can be written similarly [ y(x) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["b", "n"], "*", 
     RowBox[{"Sin", "(", 
      RowBox[{"n", "*", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "f7741cdb-4dac-4ad6-90bf-cb95aec8e825"],
 " ] and substitute."
}], "Text",
 CellChangeTimes->{{3.707151698753717*^9, 3.707151705400028*^9}, {
  3.707151811037314*^9, 3.707151833988578*^9}, {3.707151870795025*^9, 
  3.7071519817049007`*^9}, {3.707156307504339*^9, 3.707156317462287*^9}, {
  3.707156940443632*^9, 3.707156944473699*^9}, {3.707163037843361*^9, 
  3.707163044125297*^9}, {3.7071632639034643`*^9, 3.707163286246563*^9}, {
  3.707163957864884*^9, 3.707164015760302*^9}, {3.707164058527926*^9, 
  3.707164058528027*^9}, {3.707165199404097*^9, 3.7071652084317217`*^9}, {
  3.707244760618108*^9, 
  3.7072447619838123`*^9}},ExpressionUUID->"5aa563f3-e44e-4f0c-b52b-\
e39d56f040f5"],

Cell["\<\
To begin, we compute the second derivative on the left-hand side of the \
equation for each term:\
\>", "Direction",
 CellChangeTimes->{{3.707152008793919*^9, 3.707152014359642*^9}, {
  3.707152262332337*^9, 3.707152271152391*^9}, {3.7071556422139874`*^9, 
  3.707155660211375*^9}, {3.707163818522656*^9, 
  3.707163823976309*^9}},ExpressionUUID->"34b03dd5-05eb-4d5c-ae40-\
8c042c927544"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lhs", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"b", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"n", "*", "x"}], "]"}]}], ",", "x"}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707152015734844*^9, 3.707152105034499*^9}, 
   3.70715227514014*^9, 3.707155776203244*^9, {3.707156324095127*^9, 
   3.707156327642603*^9}, {3.7071565546792297`*^9, 3.7071565686998672`*^9}, {
   3.707156962418764*^9, 3.707156963049732*^9}, {3.707163055584755*^9, 
   3.707163056159976*^9}, {3.707164021565448*^9, 3.707164079362836*^9}, {
   3.7071652219971027`*^9, 3.707165229262394*^9}, {3.7071655282300053`*^9, 
   3.707165528476623*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"b4385ed1-c83e-4a33-8679-35838ff87972"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "b"}], " ", 
  SuperscriptBox["n", "2"], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"n", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.707152106295628*^9, 3.7071522754415483`*^9, 3.7071557771020517`*^9, 
   3.7071563278487177`*^9, 3.707156569905202*^9, 3.707156964250248*^9, 
   3.707163058295492*^9, {3.707164041893277*^9, 3.707164079689142*^9}, 
   3.7071652356611853`*^9, 3.707165529369834*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"9520a868-f2f1-46ae-bf51-7a4c87136b5e"]
}, Open  ]],

Cell[TextData[{
 "Since each term in the sum on the left-hand side and right-hand side must \
be equal, an equation involving solely ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "n"], TraditionalForm]],ExpressionUUID->
  "96555e18-5009-4f71-bf3c-1dc9e93f0637"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "follows."
}], "Text",
 CellChangeTimes->{{3.707152338793318*^9, 3.7071523887182207`*^9}, {
  3.707155679882695*^9, 3.70715569227454*^9}, {3.707163065661002*^9, 
  3.707163105395772*^9}, {3.707163308846037*^9, 3.707163316366144*^9}, {
  3.707163838552702*^9, 3.707163840168271*^9}, {3.707165371482049*^9, 
  3.7071654103044653`*^9}},ExpressionUUID->"7448fb09-4d04-4b94-b1c6-\
0bca360e1510"],

Cell["\<\
We then solve for the unknown coefficients, after generalizing the \
coefficients on the right-hand side. 
For the even terms:\
\>", "Direction",
 CellChangeTimes->{{3.707152329951325*^9, 3.707152330789425*^9}, {
  3.707152398797473*^9, 3.707152413997382*^9}, {3.7071525062427588`*^9, 
  3.707152514553738*^9}, {3.707155701817943*^9, 3.707155702090308*^9}, {
  3.707244995395933*^9, 
  3.707245009937499*^9}},ExpressionUUID->"499d3f7c-590c-4659-a700-\
4127470fe281"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "b"}], "*", 
     RowBox[{"n", "^", "2"}]}], "\[Equal]", 
    RowBox[{"k", "/", "n"}]}], ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.707152417589591*^9, 3.707152485572463*^9}, {
  3.707156467697296*^9, 3.707156468615065*^9}, {3.7071565751397533`*^9, 
  3.7071565769081087`*^9}, {3.707156954147087*^9, 3.707156967082018*^9}, {
  3.70716311861727*^9, 3.707163129771929*^9}, {3.707163193060051*^9, 
  3.7071632052583838`*^9}, {3.707163635257285*^9, 3.707163639366453*^9}, {
  3.707165437584505*^9, 3.707165437743222*^9}, {3.707165474709009*^9, 
  3.707165558708362*^9}, {3.7071656196046762`*^9, 3.7071656199948177`*^9}, {
  3.707165831337206*^9, 3.707165831525764*^9}, {3.707245013881919*^9, 
  3.7072450147777843`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"7967ffba-6e95-4648-a09b-1510270fe966"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["k", 
      SuperscriptBox["n", "3"]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.707152486125967*^9, 3.707156485608816*^9, 
  3.707156577725165*^9, 3.707156967607896*^9, 3.707163206939472*^9, 
  3.707163639888521*^9, 3.707165495889044*^9, 3.7071655416027603`*^9, 
  3.7071656207018013`*^9, 3.7071658319611893`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"e11450b1-ea82-47a1-88c7-4576e6e60a00"]
}, Open  ]],

Cell["For the odd terms:", "Direction",
 CellChangeTimes->{{3.707245003081354*^9, 
  3.707245005889241*^9}},ExpressionUUID->"94894337-19be-48d7-a872-\
3e5804467b50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "b"}], "*", 
     RowBox[{"n", "^", "2"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     RowBox[{"k", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}]}], ",", "b"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.70716556177178*^9, 3.7071655806748734`*^9}, {
  3.7071656282732*^9, 3.707165672825691*^9}, {3.707165845334498*^9, 
  3.707165849580591*^9}, {3.707245017377967*^9, 3.7072450176017513`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"84655b8a-154a-49a8-9ad0-41d6a9475ad1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     RowBox[{
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7071656341461267`*^9, 3.7071656731660757`*^9}, 
   3.707165849920794*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"7a624fd6-d92c-4453-addf-9616a378224b"]
}, Open  ]],

Cell[TextData[{
 "Thus our solution becomes y(x) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "k"}], 
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "n"}]}], ")"}]}]], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", "*", "x"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "74cc090a-107d-4e27-9dc4-fb0357af481d"],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"-", 
      FractionBox["k", 
       SuperscriptBox["n", "3"]]}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", "*", "x"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "00b14951-aadd-4eb0-b8c9-97dc2ba402b9"],
 "."
}], "Text",
 CellChangeTimes->{{3.7071525198021317`*^9, 3.707152541788185*^9}, {
  3.707155785571734*^9, 3.707155785571848*^9}, {3.707156336383773*^9, 
  3.707156338869543*^9}, {3.7071635201120996`*^9, 3.707163525851386*^9}, {
  3.7071636783850937`*^9, 3.707163678692438*^9}, {3.707165682973778*^9, 
  3.70716571233984*^9}, {3.707165748867298*^9, 3.707165749697938*^9}, {
  3.707165859243198*^9, 3.7071658689883223`*^9}, {3.707166117457148*^9, 
  3.707166118521748*^9}, {3.707245026456895*^9, 
  3.707245027368744*^9}},ExpressionUUID->"fb760ffc-3839-4b0b-9ffe-\
c6d8aaa5f829"],

Cell["Sum up the terms, set k = 1, and plot the solution:", "Direction",
 CellChangeTimes->{{3.7071661961240273`*^9, 3.707166208410324*^9}, {
  3.707244413756825*^9, 3.7072444141768827`*^9}, {3.707245032560631*^9, 
  3.707245033784563*^9}, {3.707245071500948*^9, 3.707245075490081*^9}, {
  3.707245112216693*^9, 
  3.7072451147982616`*^9}},ExpressionUUID->"941596c4-51a8-4ac5-b302-\
ef764c5bcbc5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         RowBox[{
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "n"}]}], ")"}]}]], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", "*", "x"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["k", 
          SuperscriptBox["n", "3"]]}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", "*", "x"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], "/.", 
    RowBox[{"k", "\[Rule]", "1"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7071557576569843`*^9, 3.7071559037741528`*^9}, {
   3.7071561178573523`*^9, 3.7071561529755907`*^9}, {3.707156344243338*^9, 
   3.707156347482563*^9}, 3.7071564968112717`*^9, {3.7071569773117237`*^9, 
   3.707156981057558*^9}, {3.7071578762154427`*^9, 3.707157921233254*^9}, 
   3.707157965986328*^9, {3.707163532438389*^9, 3.707163539913197*^9}, {
   3.70716573937173*^9, 3.707165787543326*^9}, {3.7071658748663683`*^9, 
   3.70716591037951*^9}, {3.707166120839171*^9, 3.707166121744793*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"3ff18523-0dd9-4d28-8111-d1d365efc2ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"sol", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "3"}], "*", "Pi"}], ",", 
     RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707155908389392*^9, 3.707155928470993*^9}, {
  3.7071579535146008`*^9, 3.707157955447184*^9}, {3.7071648877455597`*^9, 
  3.707164893597374*^9}, {3.707165899645651*^9, 3.7071659155389137`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"100ef31d-0146-44b0-9dad-63a904901ced"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
Ar/b1yPHm4UpvL2CghOp8D/KAXH/
        "]], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
GY6pBw==
        "]], 
       LineBox[{{-6.336371864571923, 
        0.022154394100833887`}, {-6.3320485918203655`, 
        0.02036023680714991}, {-6.328878191802556, 
        0.01904352238773943}, {-6.3234452790447655`, 0.016785312015488312`}}],
        LineBox[{{-6.303226773476652, 
        0.008364325252730287}, {-6.302938555293212, 0.008244124768892419}}]},
      Annotation[#, 
       "Charting`Private`Tag$251133#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-3) Pi, 3 Pi}, {-0.33189252608873065`, 
     0.33189246919264853`}}, {{-9.42477796076938, 
    9.42477796076938}, {-0.33189252608873065`, 0.33189246919264853`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7071559134109592`*^9, 3.707155929461609*^9}, 
   3.7071561616925707`*^9, 3.7071563562400293`*^9, 3.707156763877531*^9, 
   3.7071569858516903`*^9, {3.7071579392921457`*^9, 3.707157973597426*^9}, 
   3.707163544817346*^9, 3.7071637585170593`*^9, 3.70716489570327*^9, 
   3.707165790966692*^9, 3.7071658886157*^9, 3.7071659193547583`*^9, 
   3.707166128301648*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"e3a320a7-cb7b-4874-a0da-6741826623a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further Explorations", "FurtherExplorationSection",
 CellChangeTimes->{{3.70077612322993*^9, 3.7007761320921593`*^9}, {
  3.7007787731699142`*^9, 
  3.70077877480995*^9}},ExpressionUUID->"a8dbe309-65ed-41b4-91d2-\
832b37786a0d"],

Cell["Explore the Taylor Series Expansion of a Function", "FurtherExploration",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
  3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
  3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, {
  3.705686193025524*^9, 3.7056861967297907`*^9}, {3.707089991495338*^9, 
  3.7070900128691387`*^9}},ExpressionUUID->"3ce4e464-c2d8-48d4-a0aa-\
d90705cf9ece"],

Cell["\<\
Explore Other Sets of Basis Functions That Can Approximate a Function\
\>", "FurtherExploration",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
  3.705104213701561*^9, 3.7051042224510612`*^9}, {3.705105582902875*^9, 
  3.7051055862950687`*^9}, {3.705686185124048*^9, 3.705686188552953*^9}, {
  3.7070901039312677`*^9, 3.7070901218835297`*^9}, {3.707245147517548*^9, 
  3.70724516546889*^9}},ExpressionUUID->"324091a7-fed6-48a1-9f93-\
23d13eb0a284"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Authorship information", "AuthorshipSection",
 CellChangeTimes->{{3.705105762145127*^9, 
  3.7051057665253773`*^9}},ExpressionUUID->"076ddd21-e9e2-4666-ab01-\
bfdd3c33a532"],

Cell["Michael Dobbs", "Authorship",
 CellChangeTimes->{{3.7051057700535793`*^9, 3.7051057808261957`*^9}, {
  3.707090128395226*^9, 
  3.7070901296193647`*^9}},ExpressionUUID->"e9cf508f-1598-4d45-8767-\
bf5261f4d1f9"],

Cell["21.06.17", "Authorship",
 CellChangeTimes->{{3.705105786521521*^9, 3.7051057998362827`*^9}, {
  3.70709013398709*^9, 
  3.707090135314789*^9}},ExpressionUUID->"c1e614e5-5c79-49d4-ad74-\
2a7bee297d0b"],

Cell["dobbsm@sonoma.edu", "Authorship",
 CellChangeTimes->{{3.7051058070526953`*^9, 3.705105841815684*^9}, {
  3.707090144315042*^9, 
  3.707090147754984*^9}},ExpressionUUID->"a623ba2b-047b-4996-ab95-\
c6aa538620d5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       ItemBox["\"\"", ItemSize -> 0.2, StripOnInput -> False], 
       DynamicModuleBox[{}, 
        ActionMenuBox[
        "\"Insert\"", {
         "\"Section\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell[
               CellGroupData[{
                 Cell["XXXX", "Section"], 
                 Cell["XXXX", "Text"], 
                 Cell["XXXX", "Direction"], 
                 Cell[
                  BoxData["XXXX"], "Input"]}, Open]], All]; 
            SelectionMove[$CellContext`nb, Before, Cell]; 
            SelectionMove[$CellContext`nb, Next, Cell]; 
            SelectionMove[$CellContext`nb, All, CellContents]], Delimiter, 
          "\"Text\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell["XXXX", "Text"], All]; 
            SelectionMove[$CellContext`nb, All, CellContents]], 
          "\"Direction\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell["XXXX", "Direction"], All]; 
            SelectionMove[$CellContext`nb, All, CellContents]], 
          "\"Further Exploration\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell["XXXX", "FurtherExploration"], All]; 
            SelectionMove[$CellContext`nb, All, CellContents]]}, Method -> 
         "Queued", Appearance -> "PopupMenu", FrameMargins -> 2.4], 
        Initialization :> (Exploration`MoveCursorAfterCellPosition[
           Pattern[$CellContext`nb, 
            Blank[]]] := Which[
           MatchQ[
            Developer`CellInformation[$CellContext`nb], {
             Repeated[{
               BlankSequence[], "CursorPosition" -> "CellBracket", 
               BlankSequence[]}]}], 
           SelectionMove[$CellContext`nb, After, Cell], 
           Developer`CellInformation[$CellContext`nb] =!= $Failed, 
           Module[{$CellContext`lnkre}, 
             While[(LinkWrite[$ParentLink, 
                 
                 FrontEnd`CellInformation[$CellContext`nb]]; \
$CellContext`lnkre = LinkRead[$ParentLink]); 
              And[$CellContext`lnkre =!= $Failed, 
                Not[
                 MemberQ[
                  ReplaceAll["CursorPosition", $CellContext`lnkre], 
                  "CellBracket"]]], 
              FrontEndExecute[
               
               FrontEnd`SelectionMove[$CellContext`nb, All, Cell, AutoScroll -> 
                False]]]]; SelectionMove[$CellContext`nb, After, Cell]]), 
        DynamicModuleValues :> {}], 
       ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False], 
       ButtonBox["\"Sample\"", ButtonFunction :> NotebookOpen[
          
          FileNameJoin[{$UserBaseDirectory, "Applications", 
            "SummerSchoolTemplates", "FrontEnd", "TextResources", 
            "TopicExplorationExample.nb"}]], Appearance -> Automatic, 
        Evaluator -> Automatic, Method -> "Queued"]}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
  "DockedCell"],
CellLabelAutoDelete->False,
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], FontFamily -> "Source Sans Pro", FontTracking -> -0.8,
     FontColor -> RGBColor[0.65, 0, 0]], 
   Cell[
    StyleData["Abstract", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    16, FontSlant -> "Italic", FontColor -> GrayLevel[0.4]], 
   Cell[
    StyleData["Section"], CellFrame -> False, FontFamily -> "Source Sans Pro",
     FontTracking -> -0.5, $CellContext`ReturnCreatesNewCell -> 
    True, $CellContext`DefaultReturnCreatedCellStyle -> "Text"], 
   Cell[
    StyleData["FurtherExplorationSection"], 
    CellMargins -> {{28, Inherited}, {6, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro Semibold", FontSize -> 
    22, FontColor -> GrayLevel[0.35]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{66, 10}, {5, 5}}, FontSize -> 14, FontWeight -> "Bold", 
    FontColor -> GrayLevel[0.5], $CellContext`ReturnCreatesNewCell -> True], 
   Cell[
    StyleData["AuthorshipSection"], CellMargins -> {{28, Inherited}, {6, 24}},
     CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro Semibold", FontSize -> 
    22, FontColor -> GrayLevel[0.35]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{66, 10}, {4, 4}}, FontSize -> 14, FontColor -> 
    GrayLevel[0.5], $CellContext`ReturnCreatesNewCell -> True], 
   Cell[
    StyleData["Text"], DefaultNewCellStyle -> 
    "Direction", $CellContext`ReturnCreatesNewCell -> 
    True, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
   Cell[
    StyleData["Direction", StyleDefinitions -> StyleData["Text"]], 
    CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", FontColor -> GrayLevel[0.7]], 
    CellMargins -> {{78, 10}, {6, 7}}, CellFrameLabelMargins -> 4, 
    MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 14, 
    FontWeight -> "Plain", FontColor -> 
    GrayLevel[0.4], $CellContext`DefaultReturnCreatedCellStyle -> "Input"], 
   Cell[
    StyleData["Code"], MenuCommandKey -> None]}, Visible -> False, 
  FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 440, 9, 158, "Title", "ExpressionUUID" -> \
"d45c1ada-1e6d-4124-9d73-733ea5dc6b8f"],
Cell[1023, 33, 484, 9, 33, "Abstract", "ExpressionUUID" -> \
"aed93f91-c5d2-4282-9128-bc38b699b910"],
Cell[CellGroupData[{
Cell[1532, 46, 410, 6, 62, "Section", "ExpressionUUID" -> \
"fa040ec3-1ff0-437d-b576-fbcb15193ddc"],
Cell[CellGroupData[{
Cell[1967, 56, 353, 6, 44, "Subsection", "ExpressionUUID" -> \
"f12f8177-2083-4599-b3a9-0e793ac71dc1"],
Cell[2323, 64, 895, 18, 49, "Text", "ExpressionUUID" -> \
"27166190-f905-4c80-bff5-cd3ea3fb18a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3255, 87, 363, 6, 44, "Subsection", "ExpressionUUID" -> \
"6b2b6e79-da96-4cbb-b29d-35974ae31bb0"],
Cell[3621, 95, 622, 11, 30, "Text", "ExpressionUUID" -> \
"7a87bf49-59ac-46cb-bad2-2980a9a19cc0"],
Cell[4246, 108, 428, 11, 32, "Direction", "ExpressionUUID" -> \
"fe9c1cb7-fb56-4346-938a-56d31e2143e1"],
Cell[CellGroupData[{
Cell[4699, 123, 604, 13, 32, "Input", "ExpressionUUID" -> \
"c7e394f9-89c0-4730-bc63-a3bac771ab72"],
Cell[5306, 138, 27238, 465, 238, "Output", "ExpressionUUID" -> \
"a7e317d1-f250-4be9-81dd-8bf8a3aef12e"]
}, Open  ]],
Cell[32559, 606, 229, 4, 30, "Text", "ExpressionUUID" -> \
"4e2269b7-5c89-4866-ad40-2a96f7bee509"],
Cell[32791, 612, 217, 3, 31, "Direction", "ExpressionUUID" -> \
"7b0872c8-8494-4723-84aa-b87f67001b1e"],
Cell[CellGroupData[{
Cell[33033, 619, 487, 9, 32, "Input", "ExpressionUUID" -> \
"e03c25a4-5e92-4ff7-bc64-fc076a836fbc"],
Cell[33523, 630, 450, 11, 57, "Output", "ExpressionUUID" -> \
"d68d38b7-40fd-49be-868c-2a5ce221fa35"]
}, Open  ]],
Cell[33988, 644, 482, 7, 30, "Text", "ExpressionUUID" -> \
"65d86aa0-667f-40e4-914e-06de609a511b"],
Cell[34473, 653, 270, 4, 31, "Direction", "ExpressionUUID" -> \
"f18ef22c-86b6-4867-a485-5c683c714e8c"],
Cell[CellGroupData[{
Cell[34768, 661, 307, 7, 32, "Input", "ExpressionUUID" -> \
"c2477eb0-963c-4442-a87e-085d05071cdc"],
Cell[35078, 670, 27160, 462, 238, "Output", "ExpressionUUID" -> \
"911374e2-08bc-4610-93fa-55ef74deb028"]
}, Open  ]],
Cell[62253, 1135, 236, 6, 30, "Text", "ExpressionUUID" -> \
"8346eb3b-e356-4679-b905-1110d053c7ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62526, 1146, 358, 6, 44, "Subsection", "ExpressionUUID" -> \
"622ac726-c9f3-440c-9cbf-7872902611cf"],
Cell[62887, 1154, 257, 6, 30, "Text", "ExpressionUUID" -> \
"5c16a9c9-fd39-4147-8047-6b456cf76496"],
Cell[63147, 1162, 668, 9, 31, "Direction", "ExpressionUUID" -> \
"36933453-a641-46f1-a39f-95ee348cd56f"],
Cell[CellGroupData[{
Cell[63840, 1175, 307, 6, 32, "Input", "ExpressionUUID" -> \
"c4e2b457-48e3-45af-aab7-c74f5725a19c"],
Cell[64150, 1183, 2065, 65, 52, "Output", "ExpressionUUID" -> \
"372559a8-e691-4fb0-926c-9b6bcfc1be6e"]
}, Open  ]],
Cell[66230, 1251, 172, 3, 31, "Direction", "ExpressionUUID" -> \
"906bbaf1-a89b-4a47-b807-c6bf8923487c"],
Cell[CellGroupData[{
Cell[66427, 1258, 198, 3, 32, "Input", "ExpressionUUID" -> \
"40b0ac89-794b-48e3-8275-cdeef7f3561c"],
Cell[66628, 1263, 267, 4, 32, "Output", "ExpressionUUID" -> \
"2bcbb310-1d7a-4963-b5fc-64632bf9264f"]
}, Open  ]],
Cell[66910, 1270, 645, 9, 31, "Direction", "ExpressionUUID" -> \
"d76be9ea-d391-440b-9c3d-832508092c46"],
Cell[CellGroupData[{
Cell[67580, 1283, 625, 13, 32, "Input", "ExpressionUUID" -> \
"2e4af88e-e604-4160-8c85-55497ae1d28b"],
Cell[68208, 1298, 6156, 187, 139, "Output", "ExpressionUUID" -> \
"3bbacb7f-5031-4428-ba67-37390b05a422"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74401, 1490, 201, 3, 32, "Input", "ExpressionUUID" -> \
"47fa9615-6c66-42a7-8b6d-cf2b5304abcf"],
Cell[74605, 1495, 574, 13, 35, "Output", "ExpressionUUID" -> \
"1c3dafcf-bbd8-45ac-82bb-e69f5312dc2a"]
}, Open  ]],
Cell[75194, 1511, 335, 7, 30, "Text", "ExpressionUUID" -> \
"d645688f-9416-4045-9104-68dea9d0a22a"],
Cell[75532, 1520, 199, 3, 31, "Direction", "ExpressionUUID" -> \
"91c79bb8-3828-45da-9be2-a91e4e4a63e2"],
Cell[CellGroupData[{
Cell[75756, 1527, 300, 6, 32, "Input", "ExpressionUUID" -> \
"1d0e8a38-9221-4cce-a9a0-84e05dc66d31"],
Cell[76059, 1535, 4276, 135, 102, "Output", "ExpressionUUID" -> \
"4d9e1cb0-f830-4c2f-b625-ee420e93c240"]
}, Open  ]],
Cell[80350, 1673, 346, 5, 31, "Direction", "ExpressionUUID" -> \
"a977bd28-5adc-4a0e-ab01-ad11631cd4ff"],
Cell[CellGroupData[{
Cell[80721, 1682, 696, 14, 32, "Input", "ExpressionUUID" -> \
"7f563e3b-7d60-429c-ab3e-2de2f557a241"],
Cell[81420, 1698, 3299, 87, 54, "Output", "ExpressionUUID" -> \
"ac4404d5-e3dc-4d04-9edc-4455fe6bef03"]
}, Open  ]],
Cell[84734, 1788, 519, 12, 31, "Text", "ExpressionUUID" -> \
"221d3ac7-1460-4662-b8da-b483bcd8f6cc"],
Cell[85256, 1802, 389, 10, 32, "Direction", "ExpressionUUID" -> \
"3efef084-f8aa-41ba-93b6-8ec4a56d4b0b"],
Cell[CellGroupData[{
Cell[85670, 1816, 649, 15, 32, "Input", "ExpressionUUID" -> \
"ed0b8303-3f39-4646-9649-e9069f1d147e"],
Cell[86322, 1833, 58484, 1019, 240, "Output", "ExpressionUUID" -> \
"92a55b26-7963-48be-b382-52d77d46e796"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144855, 2858, 427, 6, 44, "Subsection", "ExpressionUUID" -> \
"e43779c2-7d3e-4b2d-b57c-39178d0ee555"],
Cell[145285, 2866, 258, 6, 30, "Text", "ExpressionUUID" -> \
"edb0281a-7723-4809-a510-0eddd2913bb4"],
Cell[145546, 2874, 220, 3, 31, "Direction", "ExpressionUUID" -> \
"83beadd2-1ea4-496d-8839-cfdfe1400e34"],
Cell[145769, 2879, 519, 12, 32, "Input", "ExpressionUUID" -> \
"ee5dc726-36cd-481f-9ad3-fb91dbd48d32"],
Cell[146291, 2893, 160, 3, 31, "Direction", "ExpressionUUID" -> \
"74c53f83-062d-478c-85b1-8fead42f949c"],
Cell[CellGroupData[{
Cell[146476, 2900, 574, 14, 32, "Input", "ExpressionUUID" -> \
"195db6c9-f0d1-4b2d-ae2c-f2da9a93cff5"],
Cell[147053, 2916, 49566, 870, 240, "Output", "ExpressionUUID" -> \
"a07b3b4e-48ee-42d3-be0b-9b389cfe4710"]
}, Open  ]],
Cell[196634, 3789, 366, 5, 31, "Direction", "ExpressionUUID" -> \
"d7ab4e0b-4e02-4dd5-9039-07849a4857f2"],
Cell[197003, 3796, 690, 14, 32, "Input", "ExpressionUUID" -> \
"4ee89b29-100a-425c-8d78-eeabc319ffaf"],
Cell[197696, 3812, 160, 3, 31, "Direction", "ExpressionUUID" -> \
"1349f22b-36f9-4bb7-81e2-68686c1083c1"],
Cell[CellGroupData[{
Cell[197881, 3819, 747, 17, 32, "Input", "ExpressionUUID" -> \
"b2807a2b-1470-4ba4-a5a0-9094af080e10"],
Cell[198631, 3838, 58889, 1026, 240, "Output", "ExpressionUUID" -> \
"3a1426ff-4826-4ba2-aeb0-b8004fcc1771"]
}, Open  ]],
Cell[257535, 4867, 274, 4, 31, "Direction", "ExpressionUUID" -> \
"f97b054f-66d9-4a0a-8c60-0a479bd64594"],
Cell[257812, 4873, 715, 15, 32, "Input", "ExpressionUUID" -> \
"8fa571b6-9ebd-435b-966c-47c54417410d"],
Cell[258530, 4890, 160, 3, 31, "Direction", "ExpressionUUID" -> \
"1db755eb-71d6-4030-8135-2c6ccb36364b"],
Cell[CellGroupData[{
Cell[258715, 4897, 774, 17, 32, "Input", "ExpressionUUID" -> \
"8c232b20-d967-40b5-af7a-6ab1c0356786"],
Cell[259492, 4916, 67501, 1164, 240, "Output", "ExpressionUUID" -> \
"415dc419-e223-4535-9868-bbde5d3af063"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327042, 6086, 432, 6, 44, "Subsection", "ExpressionUUID" -> \
"76ba5626-dfbb-4991-ad32-868674c55f52"],
Cell[327477, 6094, 321, 7, 30, "Text", "ExpressionUUID" -> \
"f461bccb-aaa9-4d7f-a386-f71b1f801e35"],
Cell[327801, 6103, 306, 7, 31, "Direction", "ExpressionUUID" -> \
"e3a56751-25ae-4847-a5d5-badb42a5ffee"],
Cell[CellGroupData[{
Cell[328132, 6114, 1122, 27, 32, "Input", "ExpressionUUID" -> \
"7f91ba75-7d67-4a55-aebc-245ba9ef7002"],
Cell[329257, 6143, 593, 11, 32, "Output", "ExpressionUUID" -> \
"365c5948-c882-402e-a112-8d18f2759c38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329887, 6159, 281, 4, 32, "Input", "ExpressionUUID" -> \
"599ec5cb-6097-4e9d-874c-5ffcf3d04c79"],
Cell[330171, 6165, 1540, 39, 240, "Output", "ExpressionUUID" -> \
"57718c36-d818-4553-80dc-d38b804ba544"]
}, Open  ]],
Cell[331726, 6207, 417, 8, 30, "Text", "ExpressionUUID" -> \
"53cfd6b4-de86-458b-ab1a-c54d6421edd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332180, 6220, 552, 8, 44, "Subsection", "ExpressionUUID" -> \
"5dd96d08-7eb5-4d83-acef-05a77c219081"],
Cell[332735, 6230, 443, 10, 49, "Text", "ExpressionUUID" -> \
"8519492d-8778-40f0-a1f6-10f3b29eacb5"],
Cell[333181, 6242, 355, 7, 48, "Direction", "ExpressionUUID" -> \
"8ef843b7-f2a7-472e-90ce-0a2d526c8521"],
Cell[CellGroupData[{
Cell[333561, 6253, 558, 12, 32, "Input", "ExpressionUUID" -> \
"d529fe7f-3428-406c-8d0c-37d0a5d95a77"],
Cell[334122, 6267, 1261, 37, 49, "Output", "ExpressionUUID" -> \
"a81a22eb-777d-4a54-b93b-c63e0dc92a57"]
}, Open  ]],
Cell[335398, 6307, 1040, 23, 33, "Text", "ExpressionUUID" -> \
"5aa563f3-e44e-4f0c-b52b-e39d56f040f5"],
Cell[336441, 6332, 398, 8, 31, "Direction", "ExpressionUUID" -> \
"34b03dd5-05eb-4d5c-ae40-8c042c927544"],
Cell[CellGroupData[{
Cell[336864, 6344, 800, 18, 32, "Input", "ExpressionUUID" -> \
"b4385ed1-c83e-4a33-8679-35838ff87972"],
Cell[337667, 6364, 526, 12, 32, "Output", "ExpressionUUID" -> \
"9520a868-f2f1-46ae-bf51-7a4c87136b5e"]
}, Open  ]],
Cell[338208, 6379, 696, 16, 32, "Text", "ExpressionUUID" -> \
"7448fb09-4d04-4b94-b1c6-0bca360e1510"],
Cell[338907, 6397, 476, 10, 48, "Direction", "ExpressionUUID" -> \
"499d3f7c-590c-4659-a700-4127470fe281"],
Cell[CellGroupData[{
Cell[339408, 6411, 899, 18, 32, "Input", "ExpressionUUID" -> \
"7967ffba-6e95-4648-a09b-1510270fe966"],
Cell[340310, 6431, 513, 12, 50, "Output", "ExpressionUUID" -> \
"e11450b1-ea82-47a1-88c7-4576e6e60a00"]
}, Open  ]],
Cell[340838, 6446, 165, 3, 31, "Direction", "ExpressionUUID" -> \
"94894337-19be-48d7-a872-3e5804467b50"],
Cell[CellGroupData[{
Cell[341028, 6453, 632, 18, 32, "Input", "ExpressionUUID" -> \
"84655b8a-154a-49a8-9ad0-41d6a9475ad1"],
Cell[341663, 6473, 469, 14, 52, "Output", "ExpressionUUID" -> \
"7a624fd6-d92c-4453-addf-9616a378224b"]
}, Open  ]],
Cell[342147, 6490, 1488, 41, 43, "Text", "ExpressionUUID" -> \
"fb760ffc-3839-4b0b-9ffe-c6d8aaa5f829"],
Cell[343638, 6533, 397, 6, 31, "Direction", "ExpressionUUID" -> \
"941596c4-51a8-4ac5-b302-ef764c5bcbc5"],
Cell[344038, 6541, 1398, 35, 54, "Input", "ExpressionUUID" -> \
"3ff18523-0dd9-4d28-8111-d1d365efc2ca"],
Cell[CellGroupData[{
Cell[345461, 6580, 545, 13, 32, "Input", "ExpressionUUID" -> \
"100ef31d-0146-44b0-9dad-63a904901ced"],
Cell[346009, 6595, 22837, 398, 238, "Output", "ExpressionUUID" -> \
"e3a320a7-cb7b-4874-a0da-6741826623a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[368907, 7000, 234, 4, 59, "FurtherExplorationSection", "ExpressionUUID" \
-> "a8dbe309-65ed-41b4-91d2-832b37786a0d"],
Cell[369144, 7006, 462, 6, 26, "FurtherExploration", "ExpressionUUID" -> \
"3ce4e464-c2d8-48d4-a0aa-d90705cf9ece"],
Cell[369609, 7014, 483, 8, 26, "FurtherExploration", "ExpressionUUID" -> \
"324091a7-fed6-48a1-9f93-23d13eb0a284"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370129, 7027, 179, 3, 59, "AuthorshipSection", "ExpressionUUID" -> \
"076ddd21-e9e2-4666-ab01-bfdd3c33a532"],
Cell[370311, 7032, 216, 4, 24, "Authorship", "ExpressionUUID" -> \
"e9cf508f-1598-4d45-8767-bf5261f4d1f9"],
Cell[370530, 7038, 206, 4, 24, "Authorship", "ExpressionUUID" -> \
"c1e614e5-5c79-49d4-ad74-2a7bee297d0b"],
Cell[370739, 7044, 216, 4, 24, "Authorship", "ExpressionUUID" -> \
"a623ba2b-047b-4996-ab95-c6aa538620d5"]
}, Open  ]]
}, Open  ]]
}
]
*)

